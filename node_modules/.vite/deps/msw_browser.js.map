{"version":3,"file":"msw_browser.js","names":["isObject","hasConfigurableGlobal","error","error","invariant","Interceptor","createRequestId","DeferredPromise","#executor","#decorate"],"sources":["../../.pnpm/msw@2.10.2/node_modules/msw/lib/core/utils/toResponseInit.mjs","../../.pnpm/msw@2.10.2/node_modules/msw/lib/core/utils/internal/isHandlerKind.mjs","../../.pnpm/msw@2.10.2/node_modules/msw/lib/core/utils/internal/isObject.mjs","../../.pnpm/msw@2.10.2/node_modules/msw/lib/core/utils/internal/mergeRight.mjs","../../.pnpm/@mswjs+interceptors@0.39.2/node_modules/@mswjs/interceptors/lib/browser/chunk-TX5GBTFY.mjs","../../.pnpm/@mswjs+interceptors@0.39.2/node_modules/@mswjs/interceptors/lib/browser/interceptors/WebSocket/index.mjs","../../.pnpm/msw@2.10.2/node_modules/msw/lib/core/ws/webSocketInterceptor.mjs","../../.pnpm/msw@2.10.2/node_modules/msw/lib/core/ws/handleWebSocketEvent.mjs","../../.pnpm/msw@2.10.2/node_modules/msw/lib/core/ws/utils/getMessageLength.mjs","../../.pnpm/msw@2.10.2/node_modules/msw/lib/core/ws/utils/truncateMessage.mjs","../../.pnpm/msw@2.10.2/node_modules/msw/lib/core/ws/utils/getPublicData.mjs","../../.pnpm/msw@2.10.2/node_modules/msw/lib/core/ws/utils/attachWebSocketLogger.mjs","../../.pnpm/msw@2.10.2/node_modules/msw/lib/browser/index.mjs"],"sourcesContent":["function toResponseInit(response) {\n  return {\n    status: response.status,\n    statusText: response.statusText,\n    headers: Object.fromEntries(response.headers.entries())\n  };\n}\nexport {\n  toResponseInit\n};\n//# sourceMappingURL=toResponseInit.mjs.map","function isHandlerKind(kind) {\n  return (input) => {\n    return input != null && typeof input === \"object\" && \"__kind\" in input && input.__kind === kind;\n  };\n}\nexport {\n  isHandlerKind\n};\n//# sourceMappingURL=isHandlerKind.mjs.map","function isObject(value) {\n  return value != null && typeof value === \"object\" && !Array.isArray(value);\n}\nexport {\n  isObject\n};\n//# sourceMappingURL=isObject.mjs.map","import { isObject } from './isObject.mjs';\nfunction mergeRight(left, right) {\n  return Object.entries(right).reduce(\n    (result, [key, rightValue]) => {\n      const leftValue = result[key];\n      if (Array.isArray(leftValue) && Array.isArray(rightValue)) {\n        result[key] = leftValue.concat(rightValue);\n        return result;\n      }\n      if (isObject(leftValue) && isObject(rightValue)) {\n        result[key] = mergeRight(leftValue, rightValue);\n        return result;\n      }\n      result[key] = rightValue;\n      return result;\n    },\n    Object.assign({}, left)\n  );\n}\nexport {\n  mergeRight\n};\n//# sourceMappingURL=mergeRight.mjs.map","// src/utils/hasConfigurableGlobal.ts\nfunction hasConfigurableGlobal(propertyName) {\n  const descriptor = Object.getOwnPropertyDescriptor(globalThis, propertyName);\n  if (typeof descriptor === \"undefined\") {\n    return false;\n  }\n  if (typeof descriptor.get === \"function\" && typeof descriptor.get() === \"undefined\") {\n    return false;\n  }\n  if (typeof descriptor.get === \"undefined\" && descriptor.value == null) {\n    return false;\n  }\n  if (typeof descriptor.set === \"undefined\" && !descriptor.configurable) {\n    console.error(\n      `[MSW] Failed to apply interceptor: the global \\`${propertyName}\\` property is non-configurable. This is likely an issue with your environment. If you are using a framework, please open an issue about this in their repository.`\n    );\n    return false;\n  }\n  return true;\n}\n\nexport {\n  hasConfigurableGlobal\n};\n//# sourceMappingURL=chunk-TX5GBTFY.mjs.map","import {\n  hasConfigurableGlobal\n} from \"../../chunk-TX5GBTFY.mjs\";\nimport {\n  Interceptor,\n  createRequestId\n} from \"../../chunk-QED3Q6Z2.mjs\";\n\n// src/interceptors/WebSocket/utils/bindEvent.ts\nfunction bindEvent(target, event) {\n  Object.defineProperties(event, {\n    target: {\n      value: target,\n      enumerable: true,\n      writable: true\n    },\n    currentTarget: {\n      value: target,\n      enumerable: true,\n      writable: true\n    }\n  });\n  return event;\n}\n\n// src/interceptors/WebSocket/utils/events.ts\nvar kCancelable = Symbol(\"kCancelable\");\nvar kDefaultPrevented = Symbol(\"kDefaultPrevented\");\nvar CancelableMessageEvent = class extends MessageEvent {\n  constructor(type, init) {\n    super(type, init);\n    this[kCancelable] = !!init.cancelable;\n    this[kDefaultPrevented] = false;\n  }\n  get cancelable() {\n    return this[kCancelable];\n  }\n  set cancelable(nextCancelable) {\n    this[kCancelable] = nextCancelable;\n  }\n  get defaultPrevented() {\n    return this[kDefaultPrevented];\n  }\n  set defaultPrevented(nextDefaultPrevented) {\n    this[kDefaultPrevented] = nextDefaultPrevented;\n  }\n  preventDefault() {\n    if (this.cancelable && !this[kDefaultPrevented]) {\n      this[kDefaultPrevented] = true;\n    }\n  }\n};\nkCancelable, kDefaultPrevented;\nvar CloseEvent = class extends Event {\n  constructor(type, init = {}) {\n    super(type, init);\n    this.code = init.code === void 0 ? 0 : init.code;\n    this.reason = init.reason === void 0 ? \"\" : init.reason;\n    this.wasClean = init.wasClean === void 0 ? false : init.wasClean;\n  }\n};\nvar CancelableCloseEvent = class extends CloseEvent {\n  constructor(type, init = {}) {\n    super(type, init);\n    this[kCancelable] = !!init.cancelable;\n    this[kDefaultPrevented] = false;\n  }\n  get cancelable() {\n    return this[kCancelable];\n  }\n  set cancelable(nextCancelable) {\n    this[kCancelable] = nextCancelable;\n  }\n  get defaultPrevented() {\n    return this[kDefaultPrevented];\n  }\n  set defaultPrevented(nextDefaultPrevented) {\n    this[kDefaultPrevented] = nextDefaultPrevented;\n  }\n  preventDefault() {\n    if (this.cancelable && !this[kDefaultPrevented]) {\n      this[kDefaultPrevented] = true;\n    }\n  }\n};\nkCancelable, kDefaultPrevented;\n\n// src/interceptors/WebSocket/WebSocketClientConnection.ts\nvar kEmitter = Symbol(\"kEmitter\");\nvar kBoundListener = Symbol(\"kBoundListener\");\nvar WebSocketClientConnectionProtocol = class {\n};\nvar WebSocketClientConnection = class {\n  constructor(socket, transport) {\n    this.socket = socket;\n    this.transport = transport;\n    this.id = createRequestId();\n    this.url = new URL(socket.url);\n    this[kEmitter] = new EventTarget();\n    this.transport.addEventListener(\"outgoing\", (event) => {\n      const message = bindEvent(\n        this.socket,\n        new CancelableMessageEvent(\"message\", {\n          data: event.data,\n          origin: event.origin,\n          cancelable: true\n        })\n      );\n      this[kEmitter].dispatchEvent(message);\n      if (message.defaultPrevented) {\n        event.preventDefault();\n      }\n    });\n    this.transport.addEventListener(\"close\", (event) => {\n      this[kEmitter].dispatchEvent(\n        bindEvent(this.socket, new CloseEvent(\"close\", event))\n      );\n    });\n  }\n  /**\n   * Listen for the outgoing events from the connected WebSocket client.\n   */\n  addEventListener(type, listener, options) {\n    if (!Reflect.has(listener, kBoundListener)) {\n      const boundListener = listener.bind(this.socket);\n      Object.defineProperty(listener, kBoundListener, {\n        value: boundListener,\n        enumerable: false,\n        configurable: false\n      });\n    }\n    this[kEmitter].addEventListener(\n      type,\n      Reflect.get(listener, kBoundListener),\n      options\n    );\n  }\n  /**\n   * Removes the listener for the given event.\n   */\n  removeEventListener(event, listener, options) {\n    this[kEmitter].removeEventListener(\n      event,\n      Reflect.get(listener, kBoundListener),\n      options\n    );\n  }\n  /**\n   * Send data to the connected client.\n   */\n  send(data) {\n    this.transport.send(data);\n  }\n  /**\n   * Close the WebSocket connection.\n   * @param {number} code A status code (see https://www.rfc-editor.org/rfc/rfc6455#section-7.4.1).\n   * @param {string} reason A custom connection close reason.\n   */\n  close(code, reason) {\n    this.transport.close(code, reason);\n  }\n};\nkEmitter;\n\n// src/interceptors/WebSocket/WebSocketServerConnection.ts\nimport { invariant as invariant2 } from \"outvariant\";\n\n// src/interceptors/WebSocket/WebSocketOverride.ts\nimport { invariant } from \"outvariant\";\nimport { DeferredPromise } from \"@open-draft/deferred-promise\";\nvar WEBSOCKET_CLOSE_CODE_RANGE_ERROR = \"InvalidAccessError: close code out of user configurable range\";\nvar kPassthroughPromise = Symbol(\"kPassthroughPromise\");\nvar kOnSend = Symbol(\"kOnSend\");\nvar kClose = Symbol(\"kClose\");\nvar WebSocketOverride = class extends EventTarget {\n  constructor(url, protocols) {\n    super();\n    this.CONNECTING = 0;\n    this.OPEN = 1;\n    this.CLOSING = 2;\n    this.CLOSED = 3;\n    this._onopen = null;\n    this._onmessage = null;\n    this._onerror = null;\n    this._onclose = null;\n    this.url = url.toString();\n    this.protocol = \"\";\n    this.extensions = \"\";\n    this.binaryType = \"blob\";\n    this.readyState = this.CONNECTING;\n    this.bufferedAmount = 0;\n    this[kPassthroughPromise] = new DeferredPromise();\n    queueMicrotask(async () => {\n      if (await this[kPassthroughPromise]) {\n        return;\n      }\n      this.protocol = typeof protocols === \"string\" ? protocols : Array.isArray(protocols) && protocols.length > 0 ? protocols[0] : \"\";\n      if (this.readyState === this.CONNECTING) {\n        this.readyState = this.OPEN;\n        this.dispatchEvent(bindEvent(this, new Event(\"open\")));\n      }\n    });\n  }\n  set onopen(listener) {\n    this.removeEventListener(\"open\", this._onopen);\n    this._onopen = listener;\n    if (listener !== null) {\n      this.addEventListener(\"open\", listener);\n    }\n  }\n  get onopen() {\n    return this._onopen;\n  }\n  set onmessage(listener) {\n    this.removeEventListener(\n      \"message\",\n      this._onmessage\n    );\n    this._onmessage = listener;\n    if (listener !== null) {\n      this.addEventListener(\"message\", listener);\n    }\n  }\n  get onmessage() {\n    return this._onmessage;\n  }\n  set onerror(listener) {\n    this.removeEventListener(\"error\", this._onerror);\n    this._onerror = listener;\n    if (listener !== null) {\n      this.addEventListener(\"error\", listener);\n    }\n  }\n  get onerror() {\n    return this._onerror;\n  }\n  set onclose(listener) {\n    this.removeEventListener(\"close\", this._onclose);\n    this._onclose = listener;\n    if (listener !== null) {\n      this.addEventListener(\"close\", listener);\n    }\n  }\n  get onclose() {\n    return this._onclose;\n  }\n  /**\n   * @see https://websockets.spec.whatwg.org/#ref-for-dom-websocket-send%E2%91%A0\n   */\n  send(data) {\n    if (this.readyState === this.CONNECTING) {\n      this.close();\n      throw new DOMException(\"InvalidStateError\");\n    }\n    if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {\n      return;\n    }\n    this.bufferedAmount += getDataSize(data);\n    queueMicrotask(() => {\n      var _a;\n      this.bufferedAmount = 0;\n      (_a = this[kOnSend]) == null ? void 0 : _a.call(this, data);\n    });\n  }\n  close(code = 1e3, reason) {\n    invariant(code, WEBSOCKET_CLOSE_CODE_RANGE_ERROR);\n    invariant(\n      code === 1e3 || code >= 3e3 && code <= 4999,\n      WEBSOCKET_CLOSE_CODE_RANGE_ERROR\n    );\n    this[kClose](code, reason);\n  }\n  [(kPassthroughPromise, kOnSend, kClose)](code = 1e3, reason, wasClean = true) {\n    if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {\n      return;\n    }\n    this.readyState = this.CLOSING;\n    queueMicrotask(() => {\n      this.readyState = this.CLOSED;\n      this.dispatchEvent(\n        bindEvent(\n          this,\n          new CloseEvent(\"close\", {\n            code,\n            reason,\n            wasClean\n          })\n        )\n      );\n      this._onopen = null;\n      this._onmessage = null;\n      this._onerror = null;\n      this._onclose = null;\n    });\n  }\n  addEventListener(type, listener, options) {\n    return super.addEventListener(\n      type,\n      listener,\n      options\n    );\n  }\n  removeEventListener(type, callback, options) {\n    return super.removeEventListener(type, callback, options);\n  }\n};\nWebSocketOverride.CONNECTING = 0;\nWebSocketOverride.OPEN = 1;\nWebSocketOverride.CLOSING = 2;\nWebSocketOverride.CLOSED = 3;\nfunction getDataSize(data) {\n  if (typeof data === \"string\") {\n    return data.length;\n  }\n  if (data instanceof Blob) {\n    return data.size;\n  }\n  return data.byteLength;\n}\n\n// src/interceptors/WebSocket/WebSocketServerConnection.ts\nvar kEmitter2 = Symbol(\"kEmitter\");\nvar kBoundListener2 = Symbol(\"kBoundListener\");\nvar kSend = Symbol(\"kSend\");\nvar WebSocketServerConnectionProtocol = class {\n};\nvar WebSocketServerConnection = class {\n  constructor(client, transport, createConnection) {\n    this.client = client;\n    this.transport = transport;\n    this.createConnection = createConnection;\n    this[kEmitter2] = new EventTarget();\n    this.mockCloseController = new AbortController();\n    this.realCloseController = new AbortController();\n    this.transport.addEventListener(\"outgoing\", (event) => {\n      if (typeof this.realWebSocket === \"undefined\") {\n        return;\n      }\n      queueMicrotask(() => {\n        if (!event.defaultPrevented) {\n          this[kSend](event.data);\n        }\n      });\n    });\n    this.transport.addEventListener(\n      \"incoming\",\n      this.handleIncomingMessage.bind(this)\n    );\n  }\n  /**\n   * The `WebSocket` instance connected to the original server.\n   * Accessing this before calling `server.connect()` will throw.\n   */\n  get socket() {\n    invariant2(\n      this.realWebSocket,\n      'Cannot access \"socket\" on the original WebSocket server object: the connection is not open. Did you forget to call `server.connect()`?'\n    );\n    return this.realWebSocket;\n  }\n  /**\n   * Open connection to the original WebSocket server.\n   */\n  connect() {\n    invariant2(\n      !this.realWebSocket || this.realWebSocket.readyState !== WebSocket.OPEN,\n      'Failed to call \"connect()\" on the original WebSocket instance: the connection already open'\n    );\n    const realWebSocket = this.createConnection();\n    realWebSocket.binaryType = this.client.binaryType;\n    realWebSocket.addEventListener(\n      \"open\",\n      (event) => {\n        this[kEmitter2].dispatchEvent(\n          bindEvent(this.realWebSocket, new Event(\"open\", event))\n        );\n      },\n      { once: true }\n    );\n    realWebSocket.addEventListener(\"message\", (event) => {\n      this.transport.dispatchEvent(\n        bindEvent(\n          this.realWebSocket,\n          new MessageEvent(\"incoming\", {\n            data: event.data,\n            origin: event.origin\n          })\n        )\n      );\n    });\n    this.client.addEventListener(\n      \"close\",\n      (event) => {\n        this.handleMockClose(event);\n      },\n      {\n        signal: this.mockCloseController.signal\n      }\n    );\n    realWebSocket.addEventListener(\n      \"close\",\n      (event) => {\n        this.handleRealClose(event);\n      },\n      {\n        signal: this.realCloseController.signal\n      }\n    );\n    realWebSocket.addEventListener(\"error\", () => {\n      const errorEvent = bindEvent(\n        realWebSocket,\n        new Event(\"error\", { cancelable: true })\n      );\n      this[kEmitter2].dispatchEvent(errorEvent);\n      if (!errorEvent.defaultPrevented) {\n        this.client.dispatchEvent(bindEvent(this.client, new Event(\"error\")));\n      }\n    });\n    this.realWebSocket = realWebSocket;\n  }\n  /**\n   * Listen for the incoming events from the original WebSocket server.\n   */\n  addEventListener(event, listener, options) {\n    if (!Reflect.has(listener, kBoundListener2)) {\n      const boundListener = listener.bind(this.client);\n      Object.defineProperty(listener, kBoundListener2, {\n        value: boundListener,\n        enumerable: false\n      });\n    }\n    this[kEmitter2].addEventListener(\n      event,\n      Reflect.get(listener, kBoundListener2),\n      options\n    );\n  }\n  /**\n   * Remove the listener for the given event.\n   */\n  removeEventListener(event, listener, options) {\n    this[kEmitter2].removeEventListener(\n      event,\n      Reflect.get(listener, kBoundListener2),\n      options\n    );\n  }\n  /**\n   * Send data to the original WebSocket server.\n   * @example\n   * server.send('hello')\n   * server.send(new Blob(['hello']))\n   * server.send(new TextEncoder().encode('hello'))\n   */\n  send(data) {\n    this[kSend](data);\n  }\n  [(kEmitter2, kSend)](data) {\n    const { realWebSocket } = this;\n    invariant2(\n      realWebSocket,\n      'Failed to call \"server.send()\" for \"%s\": the connection is not open. Did you forget to call \"server.connect()\"?',\n      this.client.url\n    );\n    if (realWebSocket.readyState === WebSocket.CLOSING || realWebSocket.readyState === WebSocket.CLOSED) {\n      return;\n    }\n    if (realWebSocket.readyState === WebSocket.CONNECTING) {\n      realWebSocket.addEventListener(\n        \"open\",\n        () => {\n          realWebSocket.send(data);\n        },\n        { once: true }\n      );\n      return;\n    }\n    realWebSocket.send(data);\n  }\n  /**\n   * Close the actual server connection.\n   */\n  close() {\n    const { realWebSocket } = this;\n    invariant2(\n      realWebSocket,\n      'Failed to close server connection for \"%s\": the connection is not open. Did you forget to call \"server.connect()\"?',\n      this.client.url\n    );\n    this.realCloseController.abort();\n    if (realWebSocket.readyState === WebSocket.CLOSING || realWebSocket.readyState === WebSocket.CLOSED) {\n      return;\n    }\n    realWebSocket.close();\n    queueMicrotask(() => {\n      this[kEmitter2].dispatchEvent(\n        bindEvent(\n          this.realWebSocket,\n          new CancelableCloseEvent(\"close\", {\n            /**\n             * @note `server.close()` in the interceptor\n             * always results in clean closures.\n             */\n            code: 1e3,\n            cancelable: true\n          })\n        )\n      );\n    });\n  }\n  handleIncomingMessage(event) {\n    const messageEvent = bindEvent(\n      event.target,\n      new CancelableMessageEvent(\"message\", {\n        data: event.data,\n        origin: event.origin,\n        cancelable: true\n      })\n    );\n    this[kEmitter2].dispatchEvent(messageEvent);\n    if (!messageEvent.defaultPrevented) {\n      this.client.dispatchEvent(\n        bindEvent(\n          /**\n           * @note Bind the forwarded original server events\n           * to the mock WebSocket instance so it would\n           * dispatch them straight away.\n           */\n          this.client,\n          // Clone the message event again to prevent\n          // the \"already being dispatched\" exception.\n          new MessageEvent(\"message\", {\n            data: event.data,\n            origin: event.origin\n          })\n        )\n      );\n    }\n  }\n  handleMockClose(_event) {\n    if (this.realWebSocket) {\n      this.realWebSocket.close();\n    }\n  }\n  handleRealClose(event) {\n    this.mockCloseController.abort();\n    const closeEvent = bindEvent(\n      this.realWebSocket,\n      new CancelableCloseEvent(\"close\", {\n        code: event.code,\n        reason: event.reason,\n        wasClean: event.wasClean,\n        cancelable: true\n      })\n    );\n    this[kEmitter2].dispatchEvent(closeEvent);\n    if (!closeEvent.defaultPrevented) {\n      this.client[kClose](event.code, event.reason);\n    }\n  }\n};\n\n// src/interceptors/WebSocket/WebSocketClassTransport.ts\nvar WebSocketClassTransport = class extends EventTarget {\n  constructor(socket) {\n    super();\n    this.socket = socket;\n    this.socket.addEventListener(\"close\", (event) => {\n      this.dispatchEvent(bindEvent(this.socket, new CloseEvent(\"close\", event)));\n    });\n    this.socket[kOnSend] = (data) => {\n      this.dispatchEvent(\n        bindEvent(\n          this.socket,\n          // Dispatch this as cancelable because \"client\" connection\n          // re-creates this message event (cannot dispatch the same event).\n          new CancelableMessageEvent(\"outgoing\", {\n            data,\n            origin: this.socket.url,\n            cancelable: true\n          })\n        )\n      );\n    };\n  }\n  addEventListener(type, callback, options) {\n    return super.addEventListener(type, callback, options);\n  }\n  dispatchEvent(event) {\n    return super.dispatchEvent(event);\n  }\n  send(data) {\n    queueMicrotask(() => {\n      if (this.socket.readyState === this.socket.CLOSING || this.socket.readyState === this.socket.CLOSED) {\n        return;\n      }\n      const dispatchEvent = () => {\n        this.socket.dispatchEvent(\n          bindEvent(\n            /**\n             * @note Setting this event's \"target\" to the\n             * WebSocket override instance is important.\n             * This way it can tell apart original incoming events\n             * (must be forwarded to the transport) from the\n             * mocked message events like the one below\n             * (must be dispatched on the client instance).\n             */\n            this.socket,\n            new MessageEvent(\"message\", {\n              data,\n              origin: this.socket.url\n            })\n          )\n        );\n      };\n      if (this.socket.readyState === this.socket.CONNECTING) {\n        this.socket.addEventListener(\n          \"open\",\n          () => {\n            dispatchEvent();\n          },\n          { once: true }\n        );\n      } else {\n        dispatchEvent();\n      }\n    });\n  }\n  close(code, reason) {\n    this.socket[kClose](code, reason);\n  }\n};\n\n// src/interceptors/WebSocket/index.ts\nvar _WebSocketInterceptor = class extends Interceptor {\n  constructor() {\n    super(_WebSocketInterceptor.symbol);\n  }\n  checkEnvironment() {\n    return hasConfigurableGlobal(\"WebSocket\");\n  }\n  setup() {\n    const originalWebSocketDescriptor = Object.getOwnPropertyDescriptor(\n      globalThis,\n      \"WebSocket\"\n    );\n    const WebSocketProxy = new Proxy(globalThis.WebSocket, {\n      construct: (target, args, newTarget) => {\n        const [url, protocols] = args;\n        const createConnection = () => {\n          return Reflect.construct(target, args, newTarget);\n        };\n        const socket = new WebSocketOverride(url, protocols);\n        const transport = new WebSocketClassTransport(socket);\n        queueMicrotask(() => {\n          try {\n            const server = new WebSocketServerConnection(\n              socket,\n              transport,\n              createConnection\n            );\n            const hasConnectionListeners = this.emitter.emit(\"connection\", {\n              client: new WebSocketClientConnection(socket, transport),\n              server,\n              info: {\n                protocols\n              }\n            });\n            if (hasConnectionListeners) {\n              socket[kPassthroughPromise].resolve(false);\n            } else {\n              socket[kPassthroughPromise].resolve(true);\n              server.connect();\n              server.addEventListener(\"open\", () => {\n                socket.dispatchEvent(bindEvent(socket, new Event(\"open\")));\n                if (server[\"realWebSocket\"]) {\n                  socket.protocol = server[\"realWebSocket\"].protocol;\n                }\n              });\n            }\n          } catch (error) {\n            if (error instanceof Error) {\n              socket.dispatchEvent(new Event(\"error\"));\n              if (socket.readyState !== WebSocket.CLOSING && socket.readyState !== WebSocket.CLOSED) {\n                socket[kClose](1011, error.message, false);\n              }\n              console.error(error);\n            }\n          }\n        });\n        return socket;\n      }\n    });\n    Object.defineProperty(globalThis, \"WebSocket\", {\n      value: WebSocketProxy,\n      configurable: true\n    });\n    this.subscriptions.push(() => {\n      Object.defineProperty(\n        globalThis,\n        \"WebSocket\",\n        originalWebSocketDescriptor\n      );\n    });\n  }\n};\nvar WebSocketInterceptor = _WebSocketInterceptor;\nWebSocketInterceptor.symbol = Symbol(\"websocket\");\nexport {\n  CancelableCloseEvent,\n  CancelableMessageEvent,\n  CloseEvent,\n  WebSocketClientConnection,\n  WebSocketClientConnectionProtocol,\n  WebSocketInterceptor,\n  WebSocketServerConnection,\n  WebSocketServerConnectionProtocol\n};\n//# sourceMappingURL=index.mjs.map","import { WebSocketInterceptor } from \"@mswjs/interceptors/WebSocket\";\nconst webSocketInterceptor = new WebSocketInterceptor();\nexport {\n  webSocketInterceptor\n};\n//# sourceMappingURL=webSocketInterceptor.mjs.map","import { webSocketInterceptor } from './webSocketInterceptor.mjs';\nimport {\n  onUnhandledRequest\n} from '../utils/request/onUnhandledRequest.mjs';\nimport { isHandlerKind } from '../utils/internal/isHandlerKind.mjs';\nfunction handleWebSocketEvent(options) {\n  webSocketInterceptor.on(\"connection\", async (connection) => {\n    const handlers = options.getHandlers().filter(isHandlerKind(\"EventHandler\"));\n    if (handlers.length > 0) {\n      options?.onMockedConnection(connection);\n      await Promise.all(\n        handlers.map((handler) => {\n          return handler.run(connection);\n        })\n      );\n      return;\n    }\n    const request = new Request(connection.client.url, {\n      headers: {\n        upgrade: \"websocket\",\n        connection: \"upgrade\"\n      }\n    });\n    await onUnhandledRequest(\n      request,\n      options.getUnhandledRequestStrategy()\n    ).catch((error) => {\n      const errorEvent = new Event(\"error\");\n      Object.defineProperty(errorEvent, \"cause\", {\n        enumerable: true,\n        configurable: false,\n        value: error\n      });\n      connection.client.socket.dispatchEvent(errorEvent);\n    });\n    options?.onPassthroughConnection(connection);\n    connection.server.connect();\n  });\n}\nexport {\n  handleWebSocketEvent\n};\n//# sourceMappingURL=handleWebSocketEvent.mjs.map","function getMessageLength(data) {\n  if (data instanceof Blob) {\n    return data.size;\n  }\n  if (data instanceof ArrayBuffer) {\n    return data.byteLength;\n  }\n  return new Blob([data]).size;\n}\nexport {\n  getMessageLength\n};\n//# sourceMappingURL=getMessageLength.mjs.map","const MAX_LENGTH = 24;\nfunction truncateMessage(message) {\n  if (message.length <= MAX_LENGTH) {\n    return message;\n  }\n  return `${message.slice(0, MAX_LENGTH)}\\u2026`;\n}\nexport {\n  truncateMessage\n};\n//# sourceMappingURL=truncateMessage.mjs.map","import { truncateMessage } from './truncateMessage.mjs';\nasync function getPublicData(data) {\n  if (data instanceof Blob) {\n    const text = await data.text();\n    return `Blob(${truncateMessage(text)})`;\n  }\n  if (typeof data === \"object\" && \"byteLength\" in data) {\n    const text = new TextDecoder().decode(data);\n    return `ArrayBuffer(${truncateMessage(text)})`;\n  }\n  return truncateMessage(data);\n}\nexport {\n  getPublicData\n};\n//# sourceMappingURL=getPublicData.mjs.map","import { devUtils } from '../../utils/internal/devUtils.mjs';\nimport { getTimestamp } from '../../utils/logging/getTimestamp.mjs';\nimport { toPublicUrl } from '../../utils/request/toPublicUrl.mjs';\nimport { getMessageLength } from './getMessageLength.mjs';\nimport { getPublicData } from './getPublicData.mjs';\nconst colors = {\n  system: \"#3b82f6\",\n  outgoing: \"#22c55e\",\n  incoming: \"#ef4444\",\n  mocked: \"#ff6a33\"\n};\nfunction attachWebSocketLogger(connection) {\n  const { client, server } = connection;\n  logConnectionOpen(client);\n  client.addEventListener(\"message\", (event) => {\n    logOutgoingClientMessage(event);\n  });\n  client.addEventListener(\"close\", (event) => {\n    logConnectionClose(event);\n  });\n  client.socket.addEventListener(\"error\", (event) => {\n    logClientError(event);\n  });\n  client.send = new Proxy(client.send, {\n    apply(target, thisArg, args) {\n      const [data] = args;\n      const messageEvent = new MessageEvent(\"message\", { data });\n      Object.defineProperties(messageEvent, {\n        currentTarget: {\n          enumerable: true,\n          writable: false,\n          value: client.socket\n        },\n        target: {\n          enumerable: true,\n          writable: false,\n          value: client.socket\n        }\n      });\n      queueMicrotask(() => {\n        logIncomingMockedClientMessage(messageEvent);\n      });\n      return Reflect.apply(target, thisArg, args);\n    }\n  });\n  server.addEventListener(\n    \"open\",\n    () => {\n      server.addEventListener(\"message\", (event) => {\n        logIncomingServerMessage(event);\n      });\n    },\n    { once: true }\n  );\n  server.send = new Proxy(server.send, {\n    apply(target, thisArg, args) {\n      const [data] = args;\n      const messageEvent = new MessageEvent(\"message\", { data });\n      Object.defineProperties(messageEvent, {\n        currentTarget: {\n          enumerable: true,\n          writable: false,\n          value: server.socket\n        },\n        target: {\n          enumerable: true,\n          writable: false,\n          value: server.socket\n        }\n      });\n      logOutgoingMockedClientMessage(messageEvent);\n      return Reflect.apply(target, thisArg, args);\n    }\n  });\n}\nfunction logConnectionOpen(client) {\n  const publicUrl = toPublicUrl(client.url);\n  console.groupCollapsed(\n    devUtils.formatMessage(`${getTimestamp()} %c\\u25B6%c ${publicUrl}`),\n    `color:${colors.system}`,\n    \"color:inherit\"\n  );\n  console.log(\"Client:\", client.socket);\n  console.groupEnd();\n}\nfunction logConnectionClose(event) {\n  const target = event.target;\n  const publicUrl = toPublicUrl(target.url);\n  console.groupCollapsed(\n    devUtils.formatMessage(\n      `${getTimestamp({ milliseconds: true })} %c\\u25A0%c ${publicUrl}`\n    ),\n    `color:${colors.system}`,\n    \"color:inherit\"\n  );\n  console.log(event);\n  console.groupEnd();\n}\nfunction logClientError(event) {\n  const socket = event.target;\n  const publicUrl = toPublicUrl(socket.url);\n  console.groupCollapsed(\n    devUtils.formatMessage(\n      `${getTimestamp({ milliseconds: true })} %c\\xD7%c ${publicUrl}`\n    ),\n    `color:${colors.system}`,\n    \"color:inherit\"\n  );\n  console.log(event);\n  console.groupEnd();\n}\nasync function logOutgoingClientMessage(event) {\n  const byteLength = getMessageLength(event.data);\n  const publicData = await getPublicData(event.data);\n  const arrow = event.defaultPrevented ? \"\\u21E1\" : \"\\u2B06\";\n  console.groupCollapsed(\n    devUtils.formatMessage(\n      `${getTimestamp({ milliseconds: true })} %c${arrow}%c ${publicData} %c${byteLength}%c`\n    ),\n    `color:${colors.outgoing}`,\n    \"color:inherit\",\n    \"color:gray;font-weight:normal\",\n    \"color:inherit;font-weight:inherit\"\n  );\n  console.log(event);\n  console.groupEnd();\n}\nasync function logOutgoingMockedClientMessage(event) {\n  const byteLength = getMessageLength(event.data);\n  const publicData = await getPublicData(event.data);\n  console.groupCollapsed(\n    devUtils.formatMessage(\n      `${getTimestamp({ milliseconds: true })} %c\\u2B06%c ${publicData} %c${byteLength}%c`\n    ),\n    `color:${colors.mocked}`,\n    \"color:inherit\",\n    \"color:gray;font-weight:normal\",\n    \"color:inherit;font-weight:inherit\"\n  );\n  console.log(event);\n  console.groupEnd();\n}\nasync function logIncomingMockedClientMessage(event) {\n  const byteLength = getMessageLength(event.data);\n  const publicData = await getPublicData(event.data);\n  console.groupCollapsed(\n    devUtils.formatMessage(\n      `${getTimestamp({ milliseconds: true })} %c\\u2B07%c ${publicData} %c${byteLength}%c`\n    ),\n    `color:${colors.mocked}`,\n    \"color:inherit\",\n    \"color:gray;font-weight:normal\",\n    \"color:inherit;font-weight:inherit\"\n  );\n  console.log(event);\n  console.groupEnd();\n}\nasync function logIncomingServerMessage(event) {\n  const byteLength = getMessageLength(event.data);\n  const publicData = await getPublicData(event.data);\n  const arrow = event.defaultPrevented ? \"\\u21E3\" : \"\\u2B07\";\n  console.groupCollapsed(\n    devUtils.formatMessage(\n      `${getTimestamp({ milliseconds: true })} %c${arrow}%c ${publicData} %c${byteLength}%c`\n    ),\n    `color:${colors.incoming}`,\n    \"color:inherit\",\n    \"color:gray;font-weight:normal\",\n    \"color:inherit;font-weight:inherit\"\n  );\n  console.log(event);\n  console.groupEnd();\n}\nexport {\n  attachWebSocketLogger,\n  logConnectionOpen\n};\n//# sourceMappingURL=attachWebSocketLogger.mjs.map","// node_modules/.pnpm/outvariant@1.4.3/node_modules/outvariant/lib/index.mjs\nvar POSITIONALS_EXP = /(%?)(%([sdijo]))/g;\nfunction serializePositional(positional, flag) {\n  switch (flag) {\n    case \"s\":\n      return positional;\n    case \"d\":\n    case \"i\":\n      return Number(positional);\n    case \"j\":\n      return JSON.stringify(positional);\n    case \"o\": {\n      if (typeof positional === \"string\") {\n        return positional;\n      }\n      const json = JSON.stringify(positional);\n      if (json === \"{}\" || json === \"[]\" || /^\\[object .+?\\]$/.test(json)) {\n        return positional;\n      }\n      return json;\n    }\n  }\n}\nfunction format(message, ...positionals) {\n  if (positionals.length === 0) {\n    return message;\n  }\n  let positionalIndex = 0;\n  let formattedMessage = message.replace(\n    POSITIONALS_EXP,\n    (match, isEscaped, _, flag) => {\n      const positional = positionals[positionalIndex];\n      const value = serializePositional(positional, flag);\n      if (!isEscaped) {\n        positionalIndex++;\n        return value;\n      }\n      return match;\n    }\n  );\n  if (positionalIndex < positionals.length) {\n    formattedMessage += ` ${positionals.slice(positionalIndex).join(\" \")}`;\n  }\n  formattedMessage = formattedMessage.replace(/%{2,2}/g, \"%\");\n  return formattedMessage;\n}\nvar STACK_FRAMES_TO_IGNORE = 2;\nfunction cleanErrorStack(error2) {\n  if (!error2.stack) {\n    return;\n  }\n  const nextStack = error2.stack.split(\"\\n\");\n  nextStack.splice(1, STACK_FRAMES_TO_IGNORE);\n  error2.stack = nextStack.join(\"\\n\");\n}\nvar InvariantError = class extends Error {\n  constructor(message, ...positionals) {\n    super(message);\n    this.message = message;\n    this.name = \"Invariant Violation\";\n    this.message = format(message, ...positionals);\n    cleanErrorStack(this);\n  }\n};\nvar invariant = (predicate, message, ...positionals) => {\n  if (!predicate) {\n    throw new InvariantError(message, ...positionals);\n  }\n};\ninvariant.as = (ErrorConstructor, predicate, message, ...positionals) => {\n  if (!predicate) {\n    const formatMessage = positionals.length === 0 ? message : format(message, ...positionals);\n    let error2;\n    try {\n      error2 = Reflect.construct(ErrorConstructor, [\n        formatMessage\n      ]);\n    } catch (err) {\n      error2 = ErrorConstructor(formatMessage);\n    }\n    throw error2;\n  }\n};\n\n// node_modules/.pnpm/is-node-process@1.2.0/node_modules/is-node-process/lib/index.mjs\nfunction isNodeProcess() {\n  if (typeof navigator !== \"undefined\" && navigator.product === \"ReactNative\") {\n    return true;\n  }\n  if (typeof process !== \"undefined\") {\n    const type = process.type;\n    if (type === \"renderer\" || type === \"worker\") {\n      return false;\n    }\n    return !!(process.versions && process.versions.node);\n  }\n  return false;\n}\n\n// src/browser/setupWorker/start/createStartHandler.ts\nimport { devUtils as devUtils7 } from '../core/utils/internal/devUtils.mjs';\n\n// node_modules/.pnpm/@open-draft+until@2.1.0/node_modules/@open-draft/until/lib/index.mjs\nvar until = async (promise) => {\n  try {\n    const data = await promise().catch((error2) => {\n      throw error2;\n    });\n    return { error: null, data };\n  } catch (error2) {\n    return { error: error2, data: null };\n  }\n};\n\n// src/browser/setupWorker/start/utils/getWorkerInstance.ts\nimport { devUtils } from '../core/utils/internal/devUtils.mjs';\n\n// src/browser/utils/getAbsoluteWorkerUrl.ts\nfunction getAbsoluteWorkerUrl(workerUrl) {\n  return new URL(workerUrl, location.href).href;\n}\n\n// src/browser/setupWorker/start/utils/getWorkerByRegistration.ts\nfunction getWorkerByRegistration(registration, absoluteWorkerUrl, findWorker) {\n  const allStates = [\n    registration.active,\n    registration.installing,\n    registration.waiting\n  ];\n  const relevantStates = allStates.filter((state) => {\n    return state != null;\n  });\n  const worker = relevantStates.find((worker2) => {\n    return findWorker(worker2.scriptURL, absoluteWorkerUrl);\n  });\n  return worker || null;\n}\n\n// src/browser/setupWorker/start/utils/getWorkerInstance.ts\nvar getWorkerInstance = async (url, options = {}, findWorker) => {\n  const absoluteWorkerUrl = getAbsoluteWorkerUrl(url);\n  const mockRegistrations = await navigator.serviceWorker.getRegistrations().then(\n    (registrations) => registrations.filter(\n      (registration) => getWorkerByRegistration(registration, absoluteWorkerUrl, findWorker)\n    )\n  );\n  if (!navigator.serviceWorker.controller && mockRegistrations.length > 0) {\n    location.reload();\n  }\n  const [existingRegistration] = mockRegistrations;\n  if (existingRegistration) {\n    existingRegistration.update();\n    return [\n      getWorkerByRegistration(\n        existingRegistration,\n        absoluteWorkerUrl,\n        findWorker\n      ),\n      existingRegistration\n    ];\n  }\n  const registrationResult = await until(\n    async () => {\n      const registration = await navigator.serviceWorker.register(url, options);\n      return [\n        // Compare existing worker registration by its worker URL,\n        // to prevent irrelevant workers to resolve here (such as Codesandbox worker).\n        getWorkerByRegistration(registration, absoluteWorkerUrl, findWorker),\n        registration\n      ];\n    }\n  );\n  if (registrationResult.error) {\n    const isWorkerMissing = registrationResult.error.message.includes(\"(404)\");\n    if (isWorkerMissing) {\n      const scopeUrl = new URL(options?.scope || \"/\", location.href);\n      throw new Error(\n        devUtils.formatMessage(`Failed to register a Service Worker for scope ('${scopeUrl.href}') with script ('${absoluteWorkerUrl}'): Service Worker script does not exist at the given path.\n\nDid you forget to run \"npx msw init <PUBLIC_DIR>\"?\n\nLearn more about creating the Service Worker script: https://mswjs.io/docs/cli/init`)\n      );\n    }\n    throw new Error(\n      devUtils.formatMessage(\n        \"Failed to register the Service Worker:\\n\\n%s\",\n        registrationResult.error.message\n      )\n    );\n  }\n  return registrationResult.data;\n};\n\n// src/browser/setupWorker/start/utils/enableMocking.ts\nimport { devUtils as devUtils3 } from '../core/utils/internal/devUtils.mjs';\n\n// src/browser/setupWorker/start/utils/printStartMessage.ts\nimport { devUtils as devUtils2 } from '../core/utils/internal/devUtils.mjs';\nfunction printStartMessage(args = {}) {\n  if (args.quiet) {\n    return;\n  }\n  const message = args.message || \"Mocking enabled.\";\n  console.groupCollapsed(\n    `%c${devUtils2.formatMessage(message)}`,\n    \"color:orangered;font-weight:bold;\"\n  );\n  console.log(\n    \"%cDocumentation: %chttps://mswjs.io/docs\",\n    \"font-weight:bold\",\n    \"font-weight:normal\"\n  );\n  console.log(\"Found an issue? https://github.com/mswjs/msw/issues\");\n  if (args.workerUrl) {\n    console.log(\"Worker script URL:\", args.workerUrl);\n  }\n  if (args.workerScope) {\n    console.log(\"Worker scope:\", args.workerScope);\n  }\n  if (args.client) {\n    console.log(\"Client ID: %s (%s)\", args.client.id, args.client.frameType);\n  }\n  console.groupEnd();\n}\n\n// src/browser/setupWorker/start/utils/enableMocking.ts\nasync function enableMocking(context, options) {\n  context.workerChannel.send(\"MOCK_ACTIVATE\");\n  const { payload } = await context.events.once(\"MOCKING_ENABLED\");\n  if (context.isMockingEnabled) {\n    devUtils3.warn(\n      `Found a redundant \"worker.start()\" call. Note that starting the worker while mocking is already enabled will have no effect. Consider removing this \"worker.start()\" call.`\n    );\n    return;\n  }\n  context.isMockingEnabled = true;\n  printStartMessage({\n    quiet: options.quiet,\n    workerScope: context.registration?.scope,\n    workerUrl: context.worker?.scriptURL,\n    client: payload.client\n  });\n}\n\n// src/browser/setupWorker/start/utils/createMessageChannel.ts\nvar WorkerChannel = class {\n  constructor(port) {\n    this.port = port;\n  }\n  postMessage(event, ...rest) {\n    const [data, transfer] = rest;\n    this.port.postMessage({ type: event, data }, { transfer });\n  }\n};\n\n// src/browser/utils/pruneGetRequestBody.ts\nfunction pruneGetRequestBody(request) {\n  if ([\"HEAD\", \"GET\"].includes(request.method)) {\n    return void 0;\n  }\n  return request.body;\n}\n\n// src/browser/utils/deserializeRequest.ts\nfunction deserializeRequest(serializedRequest) {\n  return new Request(serializedRequest.url, {\n    ...serializedRequest,\n    body: pruneGetRequestBody(serializedRequest)\n  });\n}\n\n// src/browser/setupWorker/start/createRequestListener.ts\nimport { RequestHandler } from '../core/handlers/RequestHandler.mjs';\nimport { handleRequest } from '../core/utils/handleRequest.mjs';\nimport { devUtils as devUtils4 } from '../core/utils/internal/devUtils.mjs';\nimport { toResponseInit } from '../core/utils/toResponseInit.mjs';\nimport { isHandlerKind } from '../core/utils/internal/isHandlerKind.mjs';\nvar createRequestListener = (context, options) => {\n  return async (event, message) => {\n    const messageChannel = new WorkerChannel(event.ports[0]);\n    const requestId = message.payload.id;\n    const request = deserializeRequest(message.payload);\n    const requestCloneForLogs = request.clone();\n    const requestClone = request.clone();\n    RequestHandler.cache.set(request, requestClone);\n    try {\n      await handleRequest(\n        request,\n        requestId,\n        context.getRequestHandlers().filter(isHandlerKind(\"RequestHandler\")),\n        options,\n        context.emitter,\n        {\n          onPassthroughResponse() {\n            messageChannel.postMessage(\"PASSTHROUGH\");\n          },\n          async onMockedResponse(response, { handler, parsedResult }) {\n            const responseClone = response.clone();\n            const responseCloneForLogs = response.clone();\n            const responseInit = toResponseInit(response);\n            if (context.supports.readableStreamTransfer) {\n              const responseStreamOrNull = response.body;\n              messageChannel.postMessage(\n                \"MOCK_RESPONSE\",\n                {\n                  ...responseInit,\n                  body: responseStreamOrNull\n                },\n                responseStreamOrNull ? [responseStreamOrNull] : void 0\n              );\n            } else {\n              const responseBufferOrNull = response.body === null ? null : await responseClone.arrayBuffer();\n              messageChannel.postMessage(\"MOCK_RESPONSE\", {\n                ...responseInit,\n                body: responseBufferOrNull\n              });\n            }\n            if (!options.quiet) {\n              context.emitter.once(\"response:mocked\", () => {\n                handler.log({\n                  request: requestCloneForLogs,\n                  response: responseCloneForLogs,\n                  parsedResult\n                });\n              });\n            }\n          }\n        }\n      );\n    } catch (error2) {\n      if (error2 instanceof Error) {\n        devUtils4.error(\n          `Uncaught exception in the request handler for \"%s %s\":\n\n%s\n\nThis exception has been gracefully handled as a 500 response, however, it's strongly recommended to resolve this error, as it indicates a mistake in your code. If you wish to mock an error response, please see this guide: https://mswjs.io/docs/http/mocking-responses/error-responses`,\n          request.method,\n          request.url,\n          error2.stack ?? error2\n        );\n        messageChannel.postMessage(\"MOCK_RESPONSE\", {\n          status: 500,\n          statusText: \"Request Handler Error\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: error2.name,\n            message: error2.message,\n            stack: error2.stack\n          })\n        });\n      }\n    }\n  };\n};\n\n// src/browser/utils/checkWorkerIntegrity.ts\nimport { devUtils as devUtils5 } from '../core/utils/internal/devUtils.mjs';\nasync function checkWorkerIntegrity(context) {\n  context.workerChannel.send(\"INTEGRITY_CHECK_REQUEST\");\n  const { payload } = await context.events.once(\"INTEGRITY_CHECK_RESPONSE\");\n  if (payload.checksum !== \"f5825c521429caf22a4dd13b66e243af\") {\n    devUtils5.warn(\n      `The currently registered Service Worker has been generated by a different version of MSW (${payload.packageVersion}) and may not be fully compatible with the installed version.\n\nIt's recommended you update your worker script by running this command:\n\n  \\u2022 npx msw init <PUBLIC_DIR>\n\nYou can also automate this process and make the worker script update automatically upon the library installations. Read more: https://mswjs.io/docs/cli/init.`\n    );\n  }\n}\n\n// node_modules/.pnpm/@mswjs+interceptors@0.39.1/node_modules/@mswjs/interceptors/lib/browser/chunk-6HYIRFX2.mjs\nvar encoder = new TextEncoder();\nfunction encodeBuffer(text) {\n  return encoder.encode(text);\n}\nfunction decodeBuffer(buffer, encoding) {\n  const decoder = new TextDecoder(encoding);\n  return decoder.decode(buffer);\n}\nfunction toArrayBuffer(array) {\n  return array.buffer.slice(\n    array.byteOffset,\n    array.byteOffset + array.byteLength\n  );\n}\n\n// node_modules/.pnpm/@mswjs+interceptors@0.39.1/node_modules/@mswjs/interceptors/lib/browser/chunk-3RXCRGL2.mjs\nvar IS_PATCHED_MODULE = Symbol(\"isPatchedModule\");\nfunction canParseUrl(url) {\n  try {\n    new URL(url);\n    return true;\n  } catch (_error) {\n    return false;\n  }\n}\nfunction getValueBySymbol(symbolName, source) {\n  const ownSymbols = Object.getOwnPropertySymbols(source);\n  const symbol = ownSymbols.find((symbol2) => {\n    return symbol2.description === symbolName;\n  });\n  if (symbol) {\n    return Reflect.get(source, symbol);\n  }\n  return;\n}\nvar _FetchResponse = class extends Response {\n  static isConfigurableStatusCode(status) {\n    return status >= 200 && status <= 599;\n  }\n  static isRedirectResponse(status) {\n    return _FetchResponse.STATUS_CODES_WITH_REDIRECT.includes(status);\n  }\n  /**\n   * Returns a boolean indicating whether the given response status\n   * code represents a response that can have a body.\n   */\n  static isResponseWithBody(status) {\n    return !_FetchResponse.STATUS_CODES_WITHOUT_BODY.includes(status);\n  }\n  static setUrl(url, response) {\n    if (!url || url === \"about:\" || !canParseUrl(url)) {\n      return;\n    }\n    const state = getValueBySymbol(\"state\", response);\n    if (state) {\n      state.urlList.push(new URL(url));\n    } else {\n      Object.defineProperty(response, \"url\", {\n        value: url,\n        enumerable: true,\n        configurable: true,\n        writable: false\n      });\n    }\n  }\n  /**\n   * Parses the given raw HTTP headers into a Fetch API `Headers` instance.\n   */\n  static parseRawHeaders(rawHeaders) {\n    const headers = new Headers();\n    for (let line = 0; line < rawHeaders.length; line += 2) {\n      headers.append(rawHeaders[line], rawHeaders[line + 1]);\n    }\n    return headers;\n  }\n  constructor(body, init = {}) {\n    var _a;\n    const status = (_a = init.status) != null ? _a : 200;\n    const safeStatus = _FetchResponse.isConfigurableStatusCode(status) ? status : 200;\n    const finalBody = _FetchResponse.isResponseWithBody(status) ? body : null;\n    super(finalBody, {\n      status: safeStatus,\n      statusText: init.statusText,\n      headers: init.headers\n    });\n    if (status !== safeStatus) {\n      const state = getValueBySymbol(\"state\", this);\n      if (state) {\n        state.status = status;\n      } else {\n        Object.defineProperty(this, \"status\", {\n          value: status,\n          enumerable: true,\n          configurable: true,\n          writable: false\n        });\n      }\n    }\n    _FetchResponse.setUrl(init.url, this);\n  }\n};\nvar FetchResponse = _FetchResponse;\nFetchResponse.STATUS_CODES_WITHOUT_BODY = [101, 103, 204, 205, 304];\nFetchResponse.STATUS_CODES_WITH_REDIRECT = [301, 302, 303, 307, 308];\nvar kRawRequest = Symbol(\"kRawRequest\");\nfunction setRawRequest(request, rawRequest) {\n  Reflect.set(request, kRawRequest, rawRequest);\n}\n\n// node_modules/.pnpm/@open-draft+logger@0.3.0/node_modules/@open-draft/logger/lib/index.mjs\nvar __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar colors_exports = {};\n__export(colors_exports, {\n  blue: () => blue,\n  gray: () => gray,\n  green: () => green,\n  red: () => red,\n  yellow: () => yellow\n});\nfunction yellow(text) {\n  return `\\x1B[33m${text}\\x1B[0m`;\n}\nfunction blue(text) {\n  return `\\x1B[34m${text}\\x1B[0m`;\n}\nfunction gray(text) {\n  return `\\x1B[90m${text}\\x1B[0m`;\n}\nfunction red(text) {\n  return `\\x1B[31m${text}\\x1B[0m`;\n}\nfunction green(text) {\n  return `\\x1B[32m${text}\\x1B[0m`;\n}\nvar IS_NODE = isNodeProcess();\nvar Logger = class {\n  constructor(name) {\n    this.name = name;\n    this.prefix = `[${this.name}]`;\n    const LOGGER_NAME = getVariable(\"DEBUG\");\n    const LOGGER_LEVEL = getVariable(\"LOG_LEVEL\");\n    const isLoggingEnabled = LOGGER_NAME === \"1\" || LOGGER_NAME === \"true\" || typeof LOGGER_NAME !== \"undefined\" && this.name.startsWith(LOGGER_NAME);\n    if (isLoggingEnabled) {\n      this.debug = isDefinedAndNotEquals(LOGGER_LEVEL, \"debug\") ? noop : this.debug;\n      this.info = isDefinedAndNotEquals(LOGGER_LEVEL, \"info\") ? noop : this.info;\n      this.success = isDefinedAndNotEquals(LOGGER_LEVEL, \"success\") ? noop : this.success;\n      this.warning = isDefinedAndNotEquals(LOGGER_LEVEL, \"warning\") ? noop : this.warning;\n      this.error = isDefinedAndNotEquals(LOGGER_LEVEL, \"error\") ? noop : this.error;\n    } else {\n      this.info = noop;\n      this.success = noop;\n      this.warning = noop;\n      this.error = noop;\n      this.only = noop;\n    }\n  }\n  prefix;\n  extend(domain) {\n    return new Logger(`${this.name}:${domain}`);\n  }\n  /**\n   * Print a debug message.\n   * @example\n   * logger.debug('no duplicates found, creating a document...')\n   */\n  debug(message, ...positionals) {\n    this.logEntry({\n      level: \"debug\",\n      message: gray(message),\n      positionals,\n      prefix: this.prefix,\n      colors: {\n        prefix: \"gray\"\n      }\n    });\n  }\n  /**\n   * Print an info message.\n   * @example\n   * logger.info('start parsing...')\n   */\n  info(message, ...positionals) {\n    this.logEntry({\n      level: \"info\",\n      message,\n      positionals,\n      prefix: this.prefix,\n      colors: {\n        prefix: \"blue\"\n      }\n    });\n    const performance2 = new PerformanceEntry();\n    return (message2, ...positionals2) => {\n      performance2.measure();\n      this.logEntry({\n        level: \"info\",\n        message: `${message2} ${gray(`${performance2.deltaTime}ms`)}`,\n        positionals: positionals2,\n        prefix: this.prefix,\n        colors: {\n          prefix: \"blue\"\n        }\n      });\n    };\n  }\n  /**\n   * Print a success message.\n   * @example\n   * logger.success('successfully created document')\n   */\n  success(message, ...positionals) {\n    this.logEntry({\n      level: \"info\",\n      message,\n      positionals,\n      prefix: `\\u2714 ${this.prefix}`,\n      colors: {\n        timestamp: \"green\",\n        prefix: \"green\"\n      }\n    });\n  }\n  /**\n   * Print a warning.\n   * @example\n   * logger.warning('found legacy document format')\n   */\n  warning(message, ...positionals) {\n    this.logEntry({\n      level: \"warning\",\n      message,\n      positionals,\n      prefix: `\\u26A0 ${this.prefix}`,\n      colors: {\n        timestamp: \"yellow\",\n        prefix: \"yellow\"\n      }\n    });\n  }\n  /**\n   * Print an error message.\n   * @example\n   * logger.error('something went wrong')\n   */\n  error(message, ...positionals) {\n    this.logEntry({\n      level: \"error\",\n      message,\n      positionals,\n      prefix: `\\u2716 ${this.prefix}`,\n      colors: {\n        timestamp: \"red\",\n        prefix: \"red\"\n      }\n    });\n  }\n  /**\n   * Execute the given callback only when the logging is enabled.\n   * This is skipped in its entirety and has no runtime cost otherwise.\n   * This executes regardless of the log level.\n   * @example\n   * logger.only(() => {\n   *   logger.info('additional info')\n   * })\n   */\n  only(callback) {\n    callback();\n  }\n  createEntry(level, message) {\n    return {\n      timestamp: /* @__PURE__ */ new Date(),\n      level,\n      message\n    };\n  }\n  logEntry(args) {\n    const {\n      level,\n      message,\n      prefix,\n      colors: customColors,\n      positionals = []\n    } = args;\n    const entry = this.createEntry(level, message);\n    const timestampColor = customColors?.timestamp || \"gray\";\n    const prefixColor = customColors?.prefix || \"gray\";\n    const colorize = {\n      timestamp: colors_exports[timestampColor],\n      prefix: colors_exports[prefixColor]\n    };\n    const write = this.getWriter(level);\n    write(\n      [colorize.timestamp(this.formatTimestamp(entry.timestamp))].concat(prefix != null ? colorize.prefix(prefix) : []).concat(serializeInput(message)).join(\" \"),\n      ...positionals.map(serializeInput)\n    );\n  }\n  formatTimestamp(timestamp) {\n    return `${timestamp.toLocaleTimeString(\n      \"en-GB\"\n    )}:${timestamp.getMilliseconds()}`;\n  }\n  getWriter(level) {\n    switch (level) {\n      case \"debug\":\n      case \"success\":\n      case \"info\": {\n        return log;\n      }\n      case \"warning\": {\n        return warn;\n      }\n      case \"error\": {\n        return error;\n      }\n    }\n  }\n};\nvar PerformanceEntry = class {\n  startTime;\n  endTime;\n  deltaTime;\n  constructor() {\n    this.startTime = performance.now();\n  }\n  measure() {\n    this.endTime = performance.now();\n    const deltaTime = this.endTime - this.startTime;\n    this.deltaTime = deltaTime.toFixed(2);\n  }\n};\nvar noop = () => void 0;\nfunction log(message, ...positionals) {\n  if (IS_NODE) {\n    process.stdout.write(format(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.log(message, ...positionals);\n}\nfunction warn(message, ...positionals) {\n  if (IS_NODE) {\n    process.stderr.write(format(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.warn(message, ...positionals);\n}\nfunction error(message, ...positionals) {\n  if (IS_NODE) {\n    process.stderr.write(format(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.error(message, ...positionals);\n}\nfunction getVariable(variableName) {\n  if (IS_NODE) {\n    return process.env[variableName];\n  }\n  return globalThis[variableName]?.toString();\n}\nfunction isDefinedAndNotEquals(value, expected) {\n  return value !== void 0 && value !== expected;\n}\nfunction serializeInput(message) {\n  if (typeof message === \"undefined\") {\n    return \"undefined\";\n  }\n  if (message === null) {\n    return \"null\";\n  }\n  if (typeof message === \"string\") {\n    return message;\n  }\n  if (typeof message === \"object\") {\n    return JSON.stringify(message);\n  }\n  return message.toString();\n}\n\n// node_modules/.pnpm/strict-event-emitter@0.5.1/node_modules/strict-event-emitter/lib/index.mjs\nvar MemoryLeakError = class extends Error {\n  constructor(emitter, type, count) {\n    super(\n      `Possible EventEmitter memory leak detected. ${count} ${type.toString()} listeners added. Use emitter.setMaxListeners() to increase limit`\n    );\n    this.emitter = emitter;\n    this.type = type;\n    this.count = count;\n    this.name = \"MaxListenersExceededWarning\";\n  }\n};\nvar _Emitter = class {\n  static listenerCount(emitter, eventName) {\n    return emitter.listenerCount(eventName);\n  }\n  constructor() {\n    this.events = /* @__PURE__ */ new Map();\n    this.maxListeners = _Emitter.defaultMaxListeners;\n    this.hasWarnedAboutPotentialMemoryLeak = false;\n  }\n  _emitInternalEvent(internalEventName, eventName, listener) {\n    this.emit(\n      internalEventName,\n      ...[eventName, listener]\n    );\n  }\n  _getListeners(eventName) {\n    return Array.prototype.concat.apply([], this.events.get(eventName)) || [];\n  }\n  _removeListener(listeners, listener) {\n    const index = listeners.indexOf(listener);\n    if (index > -1) {\n      listeners.splice(index, 1);\n    }\n    return [];\n  }\n  _wrapOnceListener(eventName, listener) {\n    const onceListener = (...data) => {\n      this.removeListener(eventName, onceListener);\n      return listener.apply(this, data);\n    };\n    Object.defineProperty(onceListener, \"name\", { value: listener.name });\n    return onceListener;\n  }\n  setMaxListeners(maxListeners) {\n    this.maxListeners = maxListeners;\n    return this;\n  }\n  /**\n   * Returns the current max listener value for the `Emitter` which is\n   * either set by `emitter.setMaxListeners(n)` or defaults to\n   * `Emitter.defaultMaxListeners`.\n   */\n  getMaxListeners() {\n    return this.maxListeners;\n  }\n  /**\n   * Returns an array listing the events for which the emitter has registered listeners.\n   * The values in the array will be strings or Symbols.\n   */\n  eventNames() {\n    return Array.from(this.events.keys());\n  }\n  /**\n   * Synchronously calls each of the listeners registered for the event named `eventName`,\n   * in the order they were registered, passing the supplied arguments to each.\n   * Returns `true` if the event has listeners, `false` otherwise.\n   *\n   * @example\n   * const emitter = new Emitter<{ hello: [string] }>()\n   * emitter.emit('hello', 'John')\n   */\n  emit(eventName, ...data) {\n    const listeners = this._getListeners(eventName);\n    listeners.forEach((listener) => {\n      listener.apply(this, data);\n    });\n    return listeners.length > 0;\n  }\n  addListener(eventName, listener) {\n    this._emitInternalEvent(\"newListener\", eventName, listener);\n    const nextListeners = this._getListeners(eventName).concat(listener);\n    this.events.set(eventName, nextListeners);\n    if (this.maxListeners > 0 && this.listenerCount(eventName) > this.maxListeners && !this.hasWarnedAboutPotentialMemoryLeak) {\n      this.hasWarnedAboutPotentialMemoryLeak = true;\n      const memoryLeakWarning = new MemoryLeakError(\n        this,\n        eventName,\n        this.listenerCount(eventName)\n      );\n      console.warn(memoryLeakWarning);\n    }\n    return this;\n  }\n  on(eventName, listener) {\n    return this.addListener(eventName, listener);\n  }\n  once(eventName, listener) {\n    return this.addListener(\n      eventName,\n      this._wrapOnceListener(eventName, listener)\n    );\n  }\n  prependListener(eventName, listener) {\n    const listeners = this._getListeners(eventName);\n    if (listeners.length > 0) {\n      const nextListeners = [listener].concat(listeners);\n      this.events.set(eventName, nextListeners);\n    } else {\n      this.events.set(eventName, listeners.concat(listener));\n    }\n    return this;\n  }\n  prependOnceListener(eventName, listener) {\n    return this.prependListener(\n      eventName,\n      this._wrapOnceListener(eventName, listener)\n    );\n  }\n  removeListener(eventName, listener) {\n    const listeners = this._getListeners(eventName);\n    if (listeners.length > 0) {\n      this._removeListener(listeners, listener);\n      this.events.set(eventName, listeners);\n      this._emitInternalEvent(\"removeListener\", eventName, listener);\n    }\n    return this;\n  }\n  /**\n   * Alias for `emitter.removeListener()`.\n   *\n   * @example\n   * emitter.off('hello', listener)\n   */\n  off(eventName, listener) {\n    return this.removeListener(eventName, listener);\n  }\n  removeAllListeners(eventName) {\n    if (eventName) {\n      this.events.delete(eventName);\n    } else {\n      this.events.clear();\n    }\n    return this;\n  }\n  /**\n   * Returns a copy of the array of listeners for the event named `eventName`.\n   */\n  listeners(eventName) {\n    return Array.from(this._getListeners(eventName));\n  }\n  /**\n   * Returns the number of listeners listening to the event named `eventName`.\n   */\n  listenerCount(eventName) {\n    return this._getListeners(eventName).length;\n  }\n  rawListeners(eventName) {\n    return this.listeners(eventName);\n  }\n};\nvar Emitter = _Emitter;\nEmitter.defaultMaxListeners = 10;\n\n// node_modules/.pnpm/@mswjs+interceptors@0.39.1/node_modules/@mswjs/interceptors/lib/browser/chunk-QED3Q6Z2.mjs\nvar INTERNAL_REQUEST_ID_HEADER_NAME = \"x-interceptors-internal-request-id\";\nfunction getGlobalSymbol(symbol) {\n  return (\n    // @ts-ignore https://github.com/Microsoft/TypeScript/issues/24587\n    globalThis[symbol] || void 0\n  );\n}\nfunction setGlobalSymbol(symbol, value) {\n  globalThis[symbol] = value;\n}\nfunction deleteGlobalSymbol(symbol) {\n  delete globalThis[symbol];\n}\nvar Interceptor = class {\n  constructor(symbol) {\n    this.symbol = symbol;\n    this.readyState = \"INACTIVE\";\n    this.emitter = new Emitter();\n    this.subscriptions = [];\n    this.logger = new Logger(symbol.description);\n    this.emitter.setMaxListeners(0);\n    this.logger.info(\"constructing the interceptor...\");\n  }\n  /**\n   * Determine if this interceptor can be applied\n   * in the current environment.\n   */\n  checkEnvironment() {\n    return true;\n  }\n  /**\n   * Apply this interceptor to the current process.\n   * Returns an already running interceptor instance if it's present.\n   */\n  apply() {\n    const logger = this.logger.extend(\"apply\");\n    logger.info(\"applying the interceptor...\");\n    if (this.readyState === \"APPLIED\") {\n      logger.info(\"intercepted already applied!\");\n      return;\n    }\n    const shouldApply = this.checkEnvironment();\n    if (!shouldApply) {\n      logger.info(\"the interceptor cannot be applied in this environment!\");\n      return;\n    }\n    this.readyState = \"APPLYING\";\n    const runningInstance = this.getInstance();\n    if (runningInstance) {\n      logger.info(\"found a running instance, reusing...\");\n      this.on = (event, listener) => {\n        logger.info('proxying the \"%s\" listener', event);\n        runningInstance.emitter.addListener(event, listener);\n        this.subscriptions.push(() => {\n          runningInstance.emitter.removeListener(event, listener);\n          logger.info('removed proxied \"%s\" listener!', event);\n        });\n        return this;\n      };\n      this.readyState = \"APPLIED\";\n      return;\n    }\n    logger.info(\"no running instance found, setting up a new instance...\");\n    this.setup();\n    this.setInstance();\n    this.readyState = \"APPLIED\";\n  }\n  /**\n   * Setup the module augments and stubs necessary for this interceptor.\n   * This method is not run if there's a running interceptor instance\n   * to prevent instantiating an interceptor multiple times.\n   */\n  setup() {\n  }\n  /**\n   * Listen to the interceptor's public events.\n   */\n  on(event, listener) {\n    const logger = this.logger.extend(\"on\");\n    if (this.readyState === \"DISPOSING\" || this.readyState === \"DISPOSED\") {\n      logger.info(\"cannot listen to events, already disposed!\");\n      return this;\n    }\n    logger.info('adding \"%s\" event listener:', event, listener);\n    this.emitter.on(event, listener);\n    return this;\n  }\n  once(event, listener) {\n    this.emitter.once(event, listener);\n    return this;\n  }\n  off(event, listener) {\n    this.emitter.off(event, listener);\n    return this;\n  }\n  removeAllListeners(event) {\n    this.emitter.removeAllListeners(event);\n    return this;\n  }\n  /**\n   * Disposes of any side-effects this interceptor has introduced.\n   */\n  dispose() {\n    const logger = this.logger.extend(\"dispose\");\n    if (this.readyState === \"DISPOSED\") {\n      logger.info(\"cannot dispose, already disposed!\");\n      return;\n    }\n    logger.info(\"disposing the interceptor...\");\n    this.readyState = \"DISPOSING\";\n    if (!this.getInstance()) {\n      logger.info(\"no interceptors running, skipping dispose...\");\n      return;\n    }\n    this.clearInstance();\n    logger.info(\"global symbol deleted:\", getGlobalSymbol(this.symbol));\n    if (this.subscriptions.length > 0) {\n      logger.info(\"disposing of %d subscriptions...\", this.subscriptions.length);\n      for (const dispose of this.subscriptions) {\n        dispose();\n      }\n      this.subscriptions = [];\n      logger.info(\"disposed of all subscriptions!\", this.subscriptions.length);\n    }\n    this.emitter.removeAllListeners();\n    logger.info(\"destroyed the listener!\");\n    this.readyState = \"DISPOSED\";\n  }\n  getInstance() {\n    var _a;\n    const instance = getGlobalSymbol(this.symbol);\n    this.logger.info(\"retrieved global instance:\", (_a = instance == null ? void 0 : instance.constructor) == null ? void 0 : _a.name);\n    return instance;\n  }\n  setInstance() {\n    setGlobalSymbol(this.symbol, this);\n    this.logger.info(\"set global instance!\", this.symbol.description);\n  }\n  clearInstance() {\n    deleteGlobalSymbol(this.symbol);\n    this.logger.info(\"cleared global instance!\", this.symbol.description);\n  }\n};\nfunction createRequestId() {\n  return Math.random().toString(16).slice(2);\n}\n\n// node_modules/.pnpm/@mswjs+interceptors@0.39.1/node_modules/@mswjs/interceptors/lib/browser/index.mjs\nvar BatchInterceptor = class extends Interceptor {\n  constructor(options) {\n    BatchInterceptor.symbol = Symbol(options.name);\n    super(BatchInterceptor.symbol);\n    this.interceptors = options.interceptors;\n  }\n  setup() {\n    const logger = this.logger.extend(\"setup\");\n    logger.info(\"applying all %d interceptors...\", this.interceptors.length);\n    for (const interceptor of this.interceptors) {\n      logger.info('applying \"%s\" interceptor...', interceptor.constructor.name);\n      interceptor.apply();\n      logger.info(\"adding interceptor dispose subscription\");\n      this.subscriptions.push(() => interceptor.dispose());\n    }\n  }\n  on(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.on(event, listener);\n    }\n    return this;\n  }\n  once(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.once(event, listener);\n    }\n    return this;\n  }\n  off(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.off(event, listener);\n    }\n    return this;\n  }\n  removeAllListeners(event) {\n    for (const interceptors of this.interceptors) {\n      interceptors.removeAllListeners(event);\n    }\n    return this;\n  }\n};\n\n// src/browser/setupWorker/start/createResponseListener.ts\nfunction createResponseListener(context) {\n  return (_, message) => {\n    const { payload: responseJson } = message;\n    const request = deserializeRequest(responseJson.request);\n    if (responseJson.response.type?.includes(\"opaque\")) {\n      return;\n    }\n    const response = responseJson.response.status === 0 ? Response.error() : new FetchResponse(\n      /**\n       * Responses may be streams here, but when we create a response object\n       * with null-body status codes, like 204, 205, 304 Response will\n       * throw when passed a non-null body, so ensure it's null here\n       * for those codes\n       */\n      FetchResponse.isResponseWithBody(responseJson.response.status) ? responseJson.response.body : null,\n      {\n        ...responseJson,\n        /**\n         * Set response URL if it's not set already.\n         * @see https://github.com/mswjs/msw/issues/2030\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/Response/url\n         */\n        url: request.url\n      }\n    );\n    context.emitter.emit(\n      responseJson.isMockedResponse ? \"response:mocked\" : \"response:bypass\",\n      {\n        requestId: responseJson.request.id,\n        request,\n        response\n      }\n    );\n  };\n}\n\n// src/browser/setupWorker/start/utils/validateWorkerScope.ts\nimport { devUtils as devUtils6 } from '../core/utils/internal/devUtils.mjs';\nfunction validateWorkerScope(registration, options) {\n  if (!options?.quiet && !location.href.startsWith(registration.scope)) {\n    devUtils6.warn(\n      `Cannot intercept requests on this page because it's outside of the worker's scope (\"${registration.scope}\"). If you wish to mock API requests on this page, you must resolve this scope issue.\n\n- (Recommended) Register the worker at the root level (\"/\") of your application.\n- Set the \"Service-Worker-Allowed\" response header to allow out-of-scope workers.`\n    );\n  }\n}\n\n// src/browser/setupWorker/start/createStartHandler.ts\nvar createStartHandler = (context) => {\n  return function start(options, customOptions) {\n    const startWorkerInstance = async () => {\n      context.events.removeAllListeners();\n      context.workerChannel.on(\n        \"REQUEST\",\n        createRequestListener(context, options)\n      );\n      context.workerChannel.on(\"RESPONSE\", createResponseListener(context));\n      const instance = await getWorkerInstance(\n        options.serviceWorker.url,\n        options.serviceWorker.options,\n        options.findWorker\n      );\n      const [worker, registration] = instance;\n      if (!worker) {\n        const missingWorkerMessage = customOptions?.findWorker ? devUtils7.formatMessage(\n          `Failed to locate the Service Worker registration using a custom \"findWorker\" predicate.\n\nPlease ensure that the custom predicate properly locates the Service Worker registration at \"%s\".\nMore details: https://mswjs.io/docs/api/setup-worker/start#findworker\n`,\n          options.serviceWorker.url\n        ) : devUtils7.formatMessage(\n          `Failed to locate the Service Worker registration.\n\nThis most likely means that the worker script URL \"%s\" cannot resolve against the actual public hostname (%s). This may happen if your application runs behind a proxy, or has a dynamic hostname.\n\nPlease consider using a custom \"serviceWorker.url\" option to point to the actual worker script location, or a custom \"findWorker\" option to resolve the Service Worker registration manually. More details: https://mswjs.io/docs/api/setup-worker/start`,\n          options.serviceWorker.url,\n          location.host\n        );\n        throw new Error(missingWorkerMessage);\n      }\n      context.worker = worker;\n      context.registration = registration;\n      context.events.addListener(window, \"beforeunload\", () => {\n        if (worker.state !== \"redundant\") {\n          context.workerChannel.send(\"CLIENT_CLOSED\");\n        }\n        window.clearInterval(context.keepAliveInterval);\n        window.postMessage({ type: \"msw/worker:stop\" });\n      });\n      await checkWorkerIntegrity(context).catch((error2) => {\n        devUtils7.error(\n          \"Error while checking the worker script integrity. Please report this on GitHub (https://github.com/mswjs/msw/issues), including the original error below.\"\n        );\n        console.error(error2);\n      });\n      context.keepAliveInterval = window.setInterval(\n        () => context.workerChannel.send(\"KEEPALIVE_REQUEST\"),\n        5e3\n      );\n      validateWorkerScope(registration, context.startOptions);\n      return registration;\n    };\n    const workerRegistration = startWorkerInstance().then(\n      async (registration) => {\n        const pendingInstance = registration.installing || registration.waiting;\n        if (pendingInstance) {\n          await new Promise((resolve) => {\n            pendingInstance.addEventListener(\"statechange\", () => {\n              if (pendingInstance.state === \"activated\") {\n                return resolve();\n              }\n            });\n          });\n        }\n        await enableMocking(context, options).catch((error2) => {\n          throw new Error(`Failed to enable mocking: ${error2?.message}`);\n        });\n        return registration;\n      }\n    );\n    return workerRegistration;\n  };\n};\n\n// src/browser/setupWorker/stop/createStop.ts\nimport { devUtils as devUtils9 } from '../core/utils/internal/devUtils.mjs';\n\n// src/browser/setupWorker/stop/utils/printStopMessage.ts\nimport { devUtils as devUtils8 } from '../core/utils/internal/devUtils.mjs';\nfunction printStopMessage(args = {}) {\n  if (args.quiet) {\n    return;\n  }\n  console.log(\n    `%c${devUtils8.formatMessage(\"Mocking disabled.\")}`,\n    \"color:orangered;font-weight:bold;\"\n  );\n}\n\n// src/browser/setupWorker/stop/createStop.ts\nvar createStop = (context) => {\n  return function stop() {\n    if (!context.isMockingEnabled) {\n      devUtils9.warn(\n        'Found a redundant \"worker.stop()\" call. Note that stopping the worker while mocking already stopped has no effect. Consider removing this \"worker.stop()\" call.'\n      );\n      return;\n    }\n    context.workerChannel.send(\"MOCK_DEACTIVATE\");\n    context.isMockingEnabled = false;\n    window.clearInterval(context.keepAliveInterval);\n    window.postMessage({ type: \"msw/worker:stop\" });\n    printStopMessage({ quiet: context.startOptions?.quiet });\n  };\n};\n\n// src/browser/setupWorker/start/utils/prepareStartHandler.ts\nimport { mergeRight } from '../core/utils/internal/mergeRight.mjs';\nvar DEFAULT_START_OPTIONS = {\n  serviceWorker: {\n    url: \"/mockServiceWorker.js\",\n    options: null\n  },\n  quiet: false,\n  waitUntilReady: true,\n  onUnhandledRequest: \"warn\",\n  findWorker(scriptURL, mockServiceWorkerUrl) {\n    return scriptURL === mockServiceWorkerUrl;\n  }\n};\n\n// node_modules/.pnpm/@open-draft+deferred-promise@2.2.0/node_modules/@open-draft/deferred-promise/build/index.mjs\nfunction createDeferredExecutor() {\n  const executor = (resolve, reject) => {\n    executor.state = \"pending\";\n    executor.resolve = (data) => {\n      if (executor.state !== \"pending\") {\n        return;\n      }\n      executor.result = data;\n      const onFulfilled = (value) => {\n        executor.state = \"fulfilled\";\n        return value;\n      };\n      return resolve(\n        data instanceof Promise ? data : Promise.resolve(data).then(onFulfilled)\n      );\n    };\n    executor.reject = (reason) => {\n      if (executor.state !== \"pending\") {\n        return;\n      }\n      queueMicrotask(() => {\n        executor.state = \"rejected\";\n      });\n      return reject(executor.rejectionReason = reason);\n    };\n  };\n  return executor;\n}\nvar DeferredPromise = class extends Promise {\n  #executor;\n  resolve;\n  reject;\n  constructor(executor = null) {\n    const deferredExecutor = createDeferredExecutor();\n    super((originalResolve, originalReject) => {\n      deferredExecutor(originalResolve, originalReject);\n      executor?.(deferredExecutor.resolve, deferredExecutor.reject);\n    });\n    this.#executor = deferredExecutor;\n    this.resolve = this.#executor.resolve;\n    this.reject = this.#executor.reject;\n  }\n  get state() {\n    return this.#executor.state;\n  }\n  get rejectionReason() {\n    return this.#executor.rejectionReason;\n  }\n  then(onFulfilled, onRejected) {\n    return this.#decorate(super.then(onFulfilled, onRejected));\n  }\n  catch(onRejected) {\n    return this.#decorate(super.catch(onRejected));\n  }\n  finally(onfinally) {\n    return this.#decorate(super.finally(onfinally));\n  }\n  #decorate(promise) {\n    return Object.defineProperties(promise, {\n      resolve: { configurable: true, value: this.resolve },\n      reject: { configurable: true, value: this.reject }\n    });\n  }\n};\n\n// node_modules/.pnpm/@mswjs+interceptors@0.39.1/node_modules/@mswjs/interceptors/lib/browser/chunk-L37TY7LC.mjs\nvar InterceptorError = class extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"InterceptorError\";\n    Object.setPrototypeOf(this, InterceptorError.prototype);\n  }\n};\nvar kRequestHandled = Symbol(\"kRequestHandled\");\nvar kResponsePromise = Symbol(\"kResponsePromise\");\nvar RequestController = class {\n  constructor(request) {\n    this.request = request;\n    this[kRequestHandled] = false;\n    this[kResponsePromise] = new DeferredPromise();\n  }\n  /**\n   * Respond to this request with the given `Response` instance.\n   * @example\n   * controller.respondWith(new Response())\n   * controller.respondWith(Response.json({ id }))\n   * controller.respondWith(Response.error())\n   */\n  respondWith(response) {\n    invariant.as(\n      InterceptorError,\n      !this[kRequestHandled],\n      'Failed to respond to the \"%s %s\" request: the \"request\" event has already been handled.',\n      this.request.method,\n      this.request.url\n    );\n    this[kRequestHandled] = true;\n    this[kResponsePromise].resolve(response);\n  }\n  /**\n   * Error this request with the given reason.\n   *\n   * @example\n   * controller.errorWith()\n   * controller.errorWith(new Error('Oops!'))\n   * controller.errorWith({ message: 'Oops!'})\n   */\n  errorWith(reason) {\n    invariant.as(\n      InterceptorError,\n      !this[kRequestHandled],\n      'Failed to error the \"%s %s\" request: the \"request\" event has already been handled.',\n      this.request.method,\n      this.request.url\n    );\n    this[kRequestHandled] = true;\n    this[kResponsePromise].resolve(reason);\n  }\n};\nasync function emitAsync(emitter, eventName, ...data) {\n  const listners = emitter.listeners(eventName);\n  if (listners.length === 0) {\n    return;\n  }\n  for (const listener of listners) {\n    await listener.apply(emitter, data);\n  }\n}\nfunction isObject(value, loose = false) {\n  return loose ? Object.prototype.toString.call(value).startsWith(\"[object \") : Object.prototype.toString.call(value) === \"[object Object]\";\n}\nfunction isPropertyAccessible(obj, key) {\n  try {\n    obj[key];\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction createServerErrorResponse(body) {\n  return new Response(\n    JSON.stringify(\n      body instanceof Error ? {\n        name: body.name,\n        message: body.message,\n        stack: body.stack\n      } : body\n    ),\n    {\n      status: 500,\n      statusText: \"Unhandled Exception\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }\n  );\n}\nfunction isResponseError(response) {\n  return response != null && response instanceof Response && isPropertyAccessible(response, \"type\") && response.type === \"error\";\n}\nfunction isResponseLike(value) {\n  return isObject(value, true) && isPropertyAccessible(value, \"status\") && isPropertyAccessible(value, \"statusText\") && isPropertyAccessible(value, \"bodyUsed\");\n}\nfunction isNodeLikeError(error2) {\n  if (error2 == null) {\n    return false;\n  }\n  if (!(error2 instanceof Error)) {\n    return false;\n  }\n  return \"code\" in error2 && \"errno\" in error2;\n}\nasync function handleRequest2(options) {\n  const handleResponse = async (response) => {\n    if (response instanceof Error) {\n      options.onError(response);\n      return true;\n    }\n    if (isResponseError(response)) {\n      options.onRequestError(response);\n      return true;\n    }\n    if (isResponseLike(response)) {\n      await options.onResponse(response);\n      return true;\n    }\n    if (isObject(response)) {\n      options.onError(response);\n      return true;\n    }\n    return false;\n  };\n  const handleResponseError = async (error2) => {\n    if (error2 instanceof InterceptorError) {\n      throw result.error;\n    }\n    if (isNodeLikeError(error2)) {\n      options.onError(error2);\n      return true;\n    }\n    if (error2 instanceof Response) {\n      return await handleResponse(error2);\n    }\n    return false;\n  };\n  options.emitter.once(\"request\", ({ requestId: pendingRequestId }) => {\n    if (pendingRequestId !== options.requestId) {\n      return;\n    }\n    if (options.controller[kResponsePromise].state === \"pending\") {\n      options.controller[kResponsePromise].resolve(void 0);\n    }\n  });\n  const requestAbortPromise = new DeferredPromise();\n  if (options.request.signal) {\n    if (options.request.signal.aborted) {\n      requestAbortPromise.reject(options.request.signal.reason);\n    } else {\n      options.request.signal.addEventListener(\n        \"abort\",\n        () => {\n          requestAbortPromise.reject(options.request.signal.reason);\n        },\n        { once: true }\n      );\n    }\n  }\n  const result = await until(async () => {\n    const requestListenersPromise = emitAsync(options.emitter, \"request\", {\n      requestId: options.requestId,\n      request: options.request,\n      controller: options.controller\n    });\n    await Promise.race([\n      // Short-circuit the request handling promise if the request gets aborted.\n      requestAbortPromise,\n      requestListenersPromise,\n      options.controller[kResponsePromise]\n    ]);\n    return await options.controller[kResponsePromise];\n  });\n  if (requestAbortPromise.state === \"rejected\") {\n    options.onError(requestAbortPromise.rejectionReason);\n    return true;\n  }\n  if (result.error) {\n    if (await handleResponseError(result.error)) {\n      return true;\n    }\n    if (options.emitter.listenerCount(\"unhandledException\") > 0) {\n      const unhandledExceptionController = new RequestController(\n        options.request\n      );\n      await emitAsync(options.emitter, \"unhandledException\", {\n        error: result.error,\n        request: options.request,\n        requestId: options.requestId,\n        controller: unhandledExceptionController\n      }).then(() => {\n        if (unhandledExceptionController[kResponsePromise].state === \"pending\") {\n          unhandledExceptionController[kResponsePromise].resolve(void 0);\n        }\n      });\n      const nextResult = await until(\n        () => unhandledExceptionController[kResponsePromise]\n      );\n      if (nextResult.error) {\n        return handleResponseError(nextResult.error);\n      }\n      if (nextResult.data) {\n        return handleResponse(nextResult.data);\n      }\n    }\n    options.onResponse(createServerErrorResponse(result.error));\n    return true;\n  }\n  if (result.data) {\n    return handleResponse(result.data);\n  }\n  return false;\n}\n\n// node_modules/.pnpm/@mswjs+interceptors@0.39.1/node_modules/@mswjs/interceptors/lib/browser/chunk-TX5GBTFY.mjs\nfunction hasConfigurableGlobal(propertyName) {\n  const descriptor = Object.getOwnPropertyDescriptor(globalThis, propertyName);\n  if (typeof descriptor === \"undefined\") {\n    return false;\n  }\n  if (typeof descriptor.get === \"function\" && typeof descriptor.get() === \"undefined\") {\n    return false;\n  }\n  if (typeof descriptor.get === \"undefined\" && descriptor.value == null) {\n    return false;\n  }\n  if (typeof descriptor.set === \"undefined\" && !descriptor.configurable) {\n    console.error(\n      `[MSW] Failed to apply interceptor: the global \\`${propertyName}\\` property is non-configurable. This is likely an issue with your environment. If you are using a framework, please open an issue about this in their repository.`\n    );\n    return false;\n  }\n  return true;\n}\n\n// node_modules/.pnpm/@mswjs+interceptors@0.39.1/node_modules/@mswjs/interceptors/lib/browser/chunk-ARPHZXGT.mjs\nfunction createNetworkError(cause) {\n  return Object.assign(new TypeError(\"Failed to fetch\"), {\n    cause\n  });\n}\nvar REQUEST_BODY_HEADERS = [\n  \"content-encoding\",\n  \"content-language\",\n  \"content-location\",\n  \"content-type\",\n  \"content-length\"\n];\nvar kRedirectCount = Symbol(\"kRedirectCount\");\nasync function followFetchRedirect(request, response) {\n  if (response.status !== 303 && request.body != null) {\n    return Promise.reject(createNetworkError());\n  }\n  const requestUrl = new URL(request.url);\n  let locationUrl;\n  try {\n    locationUrl = new URL(response.headers.get(\"location\"), request.url);\n  } catch (error2) {\n    return Promise.reject(createNetworkError(error2));\n  }\n  if (!(locationUrl.protocol === \"http:\" || locationUrl.protocol === \"https:\")) {\n    return Promise.reject(\n      createNetworkError(\"URL scheme must be a HTTP(S) scheme\")\n    );\n  }\n  if (Reflect.get(request, kRedirectCount) > 20) {\n    return Promise.reject(createNetworkError(\"redirect count exceeded\"));\n  }\n  Object.defineProperty(request, kRedirectCount, {\n    value: (Reflect.get(request, kRedirectCount) || 0) + 1\n  });\n  if (request.mode === \"cors\" && (locationUrl.username || locationUrl.password) && !sameOrigin(requestUrl, locationUrl)) {\n    return Promise.reject(\n      createNetworkError('cross origin not allowed for request mode \"cors\"')\n    );\n  }\n  const requestInit = {};\n  if ([301, 302].includes(response.status) && request.method === \"POST\" || response.status === 303 && ![\"HEAD\", \"GET\"].includes(request.method)) {\n    requestInit.method = \"GET\";\n    requestInit.body = null;\n    REQUEST_BODY_HEADERS.forEach((headerName) => {\n      request.headers.delete(headerName);\n    });\n  }\n  if (!sameOrigin(requestUrl, locationUrl)) {\n    request.headers.delete(\"authorization\");\n    request.headers.delete(\"proxy-authorization\");\n    request.headers.delete(\"cookie\");\n    request.headers.delete(\"host\");\n  }\n  requestInit.headers = request.headers;\n  return fetch(new Request(locationUrl, requestInit));\n}\nfunction sameOrigin(left, right) {\n  if (left.origin === right.origin && left.origin === \"null\") {\n    return true;\n  }\n  if (left.protocol === right.protocol && left.hostname === right.hostname && left.port === right.port) {\n    return true;\n  }\n  return false;\n}\nvar BrotliDecompressionStream = class extends TransformStream {\n  constructor() {\n    console.warn(\n      \"[Interceptors]: Brotli decompression of response streams is not supported in the browser\"\n    );\n    super({\n      transform(chunk, controller) {\n        controller.enqueue(chunk);\n      }\n    });\n  }\n};\nvar PipelineStream = class extends TransformStream {\n  constructor(transformStreams, ...strategies) {\n    super({}, ...strategies);\n    const readable = [super.readable, ...transformStreams].reduce(\n      (readable2, transform) => readable2.pipeThrough(transform)\n    );\n    Object.defineProperty(this, \"readable\", {\n      get() {\n        return readable;\n      }\n    });\n  }\n};\nfunction parseContentEncoding(contentEncoding) {\n  return contentEncoding.toLowerCase().split(\",\").map((coding) => coding.trim());\n}\nfunction createDecompressionStream(contentEncoding) {\n  if (contentEncoding === \"\") {\n    return null;\n  }\n  const codings = parseContentEncoding(contentEncoding);\n  if (codings.length === 0) {\n    return null;\n  }\n  const transformers = codings.reduceRight(\n    (transformers2, coding) => {\n      if (coding === \"gzip\" || coding === \"x-gzip\") {\n        return transformers2.concat(new DecompressionStream(\"gzip\"));\n      } else if (coding === \"deflate\") {\n        return transformers2.concat(new DecompressionStream(\"deflate\"));\n      } else if (coding === \"br\") {\n        return transformers2.concat(new BrotliDecompressionStream());\n      } else {\n        transformers2.length = 0;\n      }\n      return transformers2;\n    },\n    []\n  );\n  return new PipelineStream(transformers);\n}\nfunction decompressResponse(response) {\n  if (response.body === null) {\n    return null;\n  }\n  const decompressionStream = createDecompressionStream(\n    response.headers.get(\"content-encoding\") || \"\"\n  );\n  if (!decompressionStream) {\n    return null;\n  }\n  response.body.pipeTo(decompressionStream.writable);\n  return decompressionStream.readable;\n}\nvar _FetchInterceptor = class extends Interceptor {\n  constructor() {\n    super(_FetchInterceptor.symbol);\n  }\n  checkEnvironment() {\n    return hasConfigurableGlobal(\"fetch\");\n  }\n  async setup() {\n    const pureFetch = globalThis.fetch;\n    invariant(\n      !pureFetch[IS_PATCHED_MODULE],\n      'Failed to patch the \"fetch\" module: already patched.'\n    );\n    globalThis.fetch = async (input, init) => {\n      const requestId = createRequestId();\n      const resolvedInput = typeof input === \"string\" && typeof location !== \"undefined\" && !canParseUrl(input) ? new URL(input, location.href) : input;\n      const request = new Request(resolvedInput, init);\n      if (input instanceof Request) {\n        setRawRequest(request, input);\n      }\n      const responsePromise = new DeferredPromise();\n      const controller = new RequestController(request);\n      this.logger.info(\"[%s] %s\", request.method, request.url);\n      this.logger.info(\"awaiting for the mocked response...\");\n      this.logger.info(\n        'emitting the \"request\" event for %s listener(s)...',\n        this.emitter.listenerCount(\"request\")\n      );\n      const isRequestHandled = await handleRequest2({\n        request,\n        requestId,\n        emitter: this.emitter,\n        controller,\n        onResponse: async (rawResponse) => {\n          this.logger.info(\"received mocked response!\", {\n            rawResponse\n          });\n          const decompressedStream = decompressResponse(rawResponse);\n          const response = decompressedStream === null ? rawResponse : new FetchResponse(decompressedStream, rawResponse);\n          FetchResponse.setUrl(request.url, response);\n          if (FetchResponse.isRedirectResponse(response.status)) {\n            if (request.redirect === \"error\") {\n              responsePromise.reject(createNetworkError(\"unexpected redirect\"));\n              return;\n            }\n            if (request.redirect === \"follow\") {\n              followFetchRedirect(request, response).then(\n                (response2) => {\n                  responsePromise.resolve(response2);\n                },\n                (reason) => {\n                  responsePromise.reject(reason);\n                }\n              );\n              return;\n            }\n          }\n          if (this.emitter.listenerCount(\"response\") > 0) {\n            this.logger.info('emitting the \"response\" event...');\n            await emitAsync(this.emitter, \"response\", {\n              // Clone the mocked response for the \"response\" event listener.\n              // This way, the listener can read the response and not lock its body\n              // for the actual fetch consumer.\n              response: response.clone(),\n              isMockedResponse: true,\n              request,\n              requestId\n            });\n          }\n          responsePromise.resolve(response);\n        },\n        onRequestError: (response) => {\n          this.logger.info(\"request has errored!\", { response });\n          responsePromise.reject(createNetworkError(response));\n        },\n        onError: (error2) => {\n          this.logger.info(\"request has been aborted!\", { error: error2 });\n          responsePromise.reject(error2);\n        }\n      });\n      if (isRequestHandled) {\n        this.logger.info(\"request has been handled, returning mock promise...\");\n        return responsePromise;\n      }\n      this.logger.info(\n        \"no mocked response received, performing request as-is...\"\n      );\n      const requestCloneForResponseEvent = request.clone();\n      return pureFetch(request).then(async (response) => {\n        this.logger.info(\"original fetch performed\", response);\n        if (this.emitter.listenerCount(\"response\") > 0) {\n          this.logger.info('emitting the \"response\" event...');\n          const responseClone = response.clone();\n          await emitAsync(this.emitter, \"response\", {\n            response: responseClone,\n            isMockedResponse: false,\n            request: requestCloneForResponseEvent,\n            requestId\n          });\n        }\n        return response;\n      });\n    };\n    Object.defineProperty(globalThis.fetch, IS_PATCHED_MODULE, {\n      enumerable: true,\n      configurable: true,\n      value: true\n    });\n    this.subscriptions.push(() => {\n      Object.defineProperty(globalThis.fetch, IS_PATCHED_MODULE, {\n        value: void 0\n      });\n      globalThis.fetch = pureFetch;\n      this.logger.info(\n        'restored native \"globalThis.fetch\"!',\n        globalThis.fetch.name\n      );\n    });\n  }\n};\nvar FetchInterceptor = _FetchInterceptor;\nFetchInterceptor.symbol = Symbol(\"fetch\");\n\n// node_modules/.pnpm/@mswjs+interceptors@0.39.1/node_modules/@mswjs/interceptors/lib/browser/chunk-QKSBFQDK.mjs\nfunction concatArrayBuffer(left, right) {\n  const result = new Uint8Array(left.byteLength + right.byteLength);\n  result.set(left, 0);\n  result.set(right, left.byteLength);\n  return result;\n}\nvar EventPolyfill = class {\n  constructor(type, options) {\n    this.NONE = 0;\n    this.CAPTURING_PHASE = 1;\n    this.AT_TARGET = 2;\n    this.BUBBLING_PHASE = 3;\n    this.type = \"\";\n    this.srcElement = null;\n    this.currentTarget = null;\n    this.eventPhase = 0;\n    this.isTrusted = true;\n    this.composed = false;\n    this.cancelable = true;\n    this.defaultPrevented = false;\n    this.bubbles = true;\n    this.lengthComputable = true;\n    this.loaded = 0;\n    this.total = 0;\n    this.cancelBubble = false;\n    this.returnValue = true;\n    this.type = type;\n    this.target = (options == null ? void 0 : options.target) || null;\n    this.currentTarget = (options == null ? void 0 : options.currentTarget) || null;\n    this.timeStamp = Date.now();\n  }\n  composedPath() {\n    return [];\n  }\n  initEvent(type, bubbles, cancelable) {\n    this.type = type;\n    this.bubbles = !!bubbles;\n    this.cancelable = !!cancelable;\n  }\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n  stopPropagation() {\n  }\n  stopImmediatePropagation() {\n  }\n};\nvar ProgressEventPolyfill = class extends EventPolyfill {\n  constructor(type, init) {\n    super(type);\n    this.lengthComputable = (init == null ? void 0 : init.lengthComputable) || false;\n    this.composed = (init == null ? void 0 : init.composed) || false;\n    this.loaded = (init == null ? void 0 : init.loaded) || 0;\n    this.total = (init == null ? void 0 : init.total) || 0;\n  }\n};\nvar SUPPORTS_PROGRESS_EVENT = typeof ProgressEvent !== \"undefined\";\nfunction createEvent(target, type, init) {\n  const progressEvents = [\n    \"error\",\n    \"progress\",\n    \"loadstart\",\n    \"loadend\",\n    \"load\",\n    \"timeout\",\n    \"abort\"\n  ];\n  const ProgressEventClass = SUPPORTS_PROGRESS_EVENT ? ProgressEvent : ProgressEventPolyfill;\n  const event = progressEvents.includes(type) ? new ProgressEventClass(type, {\n    lengthComputable: true,\n    loaded: (init == null ? void 0 : init.loaded) || 0,\n    total: (init == null ? void 0 : init.total) || 0\n  }) : new EventPolyfill(type, {\n    target,\n    currentTarget: target\n  });\n  return event;\n}\nfunction findPropertySource(target, propertyName) {\n  if (!(propertyName in target)) {\n    return null;\n  }\n  const hasProperty = Object.prototype.hasOwnProperty.call(target, propertyName);\n  if (hasProperty) {\n    return target;\n  }\n  const prototype = Reflect.getPrototypeOf(target);\n  return prototype ? findPropertySource(prototype, propertyName) : null;\n}\nfunction createProxy(target, options) {\n  const proxy = new Proxy(target, optionsToProxyHandler(options));\n  return proxy;\n}\nfunction optionsToProxyHandler(options) {\n  const { constructorCall, methodCall, getProperty, setProperty } = options;\n  const handler = {};\n  if (typeof constructorCall !== \"undefined\") {\n    handler.construct = function(target, args, newTarget) {\n      const next = Reflect.construct.bind(null, target, args, newTarget);\n      return constructorCall.call(newTarget, args, next);\n    };\n  }\n  handler.set = function(target, propertyName, nextValue) {\n    const next = () => {\n      const propertySource = findPropertySource(target, propertyName) || target;\n      const ownDescriptors = Reflect.getOwnPropertyDescriptor(\n        propertySource,\n        propertyName\n      );\n      if (typeof (ownDescriptors == null ? void 0 : ownDescriptors.set) !== \"undefined\") {\n        ownDescriptors.set.apply(target, [nextValue]);\n        return true;\n      }\n      return Reflect.defineProperty(propertySource, propertyName, {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value: nextValue\n      });\n    };\n    if (typeof setProperty !== \"undefined\") {\n      return setProperty.call(target, [propertyName, nextValue], next);\n    }\n    return next();\n  };\n  handler.get = function(target, propertyName, receiver) {\n    const next = () => target[propertyName];\n    const value = typeof getProperty !== \"undefined\" ? getProperty.call(target, [propertyName, receiver], next) : next();\n    if (typeof value === \"function\") {\n      return (...args) => {\n        const next2 = value.bind(target, ...args);\n        if (typeof methodCall !== \"undefined\") {\n          return methodCall.call(target, [propertyName, args], next2);\n        }\n        return next2();\n      };\n    }\n    return value;\n  };\n  return handler;\n}\nfunction isDomParserSupportedType(type) {\n  const supportedTypes = [\n    \"application/xhtml+xml\",\n    \"application/xml\",\n    \"image/svg+xml\",\n    \"text/html\",\n    \"text/xml\"\n  ];\n  return supportedTypes.some((supportedType) => {\n    return type.startsWith(supportedType);\n  });\n}\nfunction parseJson(data) {\n  try {\n    const json = JSON.parse(data);\n    return json;\n  } catch (_) {\n    return null;\n  }\n}\nfunction createResponse(request, body) {\n  const responseBodyOrNull = FetchResponse.isResponseWithBody(request.status) ? body : null;\n  return new FetchResponse(responseBodyOrNull, {\n    url: request.responseURL,\n    status: request.status,\n    statusText: request.statusText,\n    headers: createHeadersFromXMLHttpReqestHeaders(\n      request.getAllResponseHeaders()\n    )\n  });\n}\nfunction createHeadersFromXMLHttpReqestHeaders(headersString) {\n  const headers = new Headers();\n  const lines = headersString.split(/[\\r\\n]+/);\n  for (const line of lines) {\n    if (line.trim() === \"\") {\n      continue;\n    }\n    const [name, ...parts] = line.split(\": \");\n    const value = parts.join(\": \");\n    headers.append(name, value);\n  }\n  return headers;\n}\nasync function getBodyByteLength(input) {\n  const explicitContentLength = input.headers.get(\"content-length\");\n  if (explicitContentLength != null && explicitContentLength !== \"\") {\n    return Number(explicitContentLength);\n  }\n  const buffer = await input.arrayBuffer();\n  return buffer.byteLength;\n}\nvar kIsRequestHandled = Symbol(\"kIsRequestHandled\");\nvar IS_NODE2 = isNodeProcess();\nvar kFetchRequest = Symbol(\"kFetchRequest\");\nvar XMLHttpRequestController = class {\n  constructor(initialRequest, logger) {\n    this.initialRequest = initialRequest;\n    this.logger = logger;\n    this.method = \"GET\";\n    this.url = null;\n    this[kIsRequestHandled] = false;\n    this.events = /* @__PURE__ */ new Map();\n    this.uploadEvents = /* @__PURE__ */ new Map();\n    this.requestId = createRequestId();\n    this.requestHeaders = new Headers();\n    this.responseBuffer = new Uint8Array();\n    this.request = createProxy(initialRequest, {\n      setProperty: ([propertyName, nextValue], invoke) => {\n        switch (propertyName) {\n          case \"ontimeout\": {\n            const eventName = propertyName.slice(\n              2\n            );\n            this.request.addEventListener(eventName, nextValue);\n            return invoke();\n          }\n          default: {\n            return invoke();\n          }\n        }\n      },\n      methodCall: ([methodName, args], invoke) => {\n        var _a;\n        switch (methodName) {\n          case \"open\": {\n            const [method, url] = args;\n            if (typeof url === \"undefined\") {\n              this.method = \"GET\";\n              this.url = toAbsoluteUrl(method);\n            } else {\n              this.method = method;\n              this.url = toAbsoluteUrl(url);\n            }\n            this.logger = this.logger.extend(`${this.method} ${this.url.href}`);\n            this.logger.info(\"open\", this.method, this.url.href);\n            return invoke();\n          }\n          case \"addEventListener\": {\n            const [eventName, listener] = args;\n            this.registerEvent(eventName, listener);\n            this.logger.info(\"addEventListener\", eventName, listener);\n            return invoke();\n          }\n          case \"setRequestHeader\": {\n            const [name, value] = args;\n            this.requestHeaders.set(name, value);\n            this.logger.info(\"setRequestHeader\", name, value);\n            return invoke();\n          }\n          case \"send\": {\n            const [body] = args;\n            this.request.addEventListener(\"load\", () => {\n              if (typeof this.onResponse !== \"undefined\") {\n                const fetchResponse = createResponse(\n                  this.request,\n                  /**\n                   * The `response` property is the right way to read\n                   * the ambiguous response body, as the request's \"responseType\" may differ.\n                   * @see https://xhr.spec.whatwg.org/#the-response-attribute\n                   */\n                  this.request.response\n                );\n                this.onResponse.call(this, {\n                  response: fetchResponse,\n                  isMockedResponse: this[kIsRequestHandled],\n                  request: fetchRequest,\n                  requestId: this.requestId\n                });\n              }\n            });\n            const requestBody = typeof body === \"string\" ? encodeBuffer(body) : body;\n            const fetchRequest = this.toFetchApiRequest(requestBody);\n            this[kFetchRequest] = fetchRequest.clone();\n            const onceRequestSettled = ((_a = this.onRequest) == null ? void 0 : _a.call(this, {\n              request: fetchRequest,\n              requestId: this.requestId\n            })) || Promise.resolve();\n            onceRequestSettled.finally(() => {\n              if (!this[kIsRequestHandled]) {\n                this.logger.info(\n                  \"request callback settled but request has not been handled (readystate %d), performing as-is...\",\n                  this.request.readyState\n                );\n                if (IS_NODE2) {\n                  this.request.setRequestHeader(\n                    INTERNAL_REQUEST_ID_HEADER_NAME,\n                    this.requestId\n                  );\n                }\n                return invoke();\n              }\n            });\n            break;\n          }\n          default: {\n            return invoke();\n          }\n        }\n      }\n    });\n    define(\n      this.request,\n      \"upload\",\n      createProxy(this.request.upload, {\n        setProperty: ([propertyName, nextValue], invoke) => {\n          switch (propertyName) {\n            case \"onloadstart\":\n            case \"onprogress\":\n            case \"onaboart\":\n            case \"onerror\":\n            case \"onload\":\n            case \"ontimeout\":\n            case \"onloadend\": {\n              const eventName = propertyName.slice(\n                2\n              );\n              this.registerUploadEvent(eventName, nextValue);\n            }\n          }\n          return invoke();\n        },\n        methodCall: ([methodName, args], invoke) => {\n          switch (methodName) {\n            case \"addEventListener\": {\n              const [eventName, listener] = args;\n              this.registerUploadEvent(eventName, listener);\n              this.logger.info(\"upload.addEventListener\", eventName, listener);\n              return invoke();\n            }\n          }\n        }\n      })\n    );\n  }\n  registerEvent(eventName, listener) {\n    const prevEvents = this.events.get(eventName) || [];\n    const nextEvents = prevEvents.concat(listener);\n    this.events.set(eventName, nextEvents);\n    this.logger.info('registered event \"%s\"', eventName, listener);\n  }\n  registerUploadEvent(eventName, listener) {\n    const prevEvents = this.uploadEvents.get(eventName) || [];\n    const nextEvents = prevEvents.concat(listener);\n    this.uploadEvents.set(eventName, nextEvents);\n    this.logger.info('registered upload event \"%s\"', eventName, listener);\n  }\n  /**\n   * Responds to the current request with the given\n   * Fetch API `Response` instance.\n   */\n  async respondWith(response) {\n    this[kIsRequestHandled] = true;\n    if (this[kFetchRequest]) {\n      const totalRequestBodyLength = await getBodyByteLength(\n        this[kFetchRequest]\n      );\n      this.trigger(\"loadstart\", this.request.upload, {\n        loaded: 0,\n        total: totalRequestBodyLength\n      });\n      this.trigger(\"progress\", this.request.upload, {\n        loaded: totalRequestBodyLength,\n        total: totalRequestBodyLength\n      });\n      this.trigger(\"load\", this.request.upload, {\n        loaded: totalRequestBodyLength,\n        total: totalRequestBodyLength\n      });\n      this.trigger(\"loadend\", this.request.upload, {\n        loaded: totalRequestBodyLength,\n        total: totalRequestBodyLength\n      });\n    }\n    this.logger.info(\n      \"responding with a mocked response: %d %s\",\n      response.status,\n      response.statusText\n    );\n    define(this.request, \"status\", response.status);\n    define(this.request, \"statusText\", response.statusText);\n    define(this.request, \"responseURL\", this.url.href);\n    this.request.getResponseHeader = new Proxy(this.request.getResponseHeader, {\n      apply: (_, __, args) => {\n        this.logger.info(\"getResponseHeader\", args[0]);\n        if (this.request.readyState < this.request.HEADERS_RECEIVED) {\n          this.logger.info(\"headers not received yet, returning null\");\n          return null;\n        }\n        const headerValue = response.headers.get(args[0]);\n        this.logger.info(\n          'resolved response header \"%s\" to',\n          args[0],\n          headerValue\n        );\n        return headerValue;\n      }\n    });\n    this.request.getAllResponseHeaders = new Proxy(\n      this.request.getAllResponseHeaders,\n      {\n        apply: () => {\n          this.logger.info(\"getAllResponseHeaders\");\n          if (this.request.readyState < this.request.HEADERS_RECEIVED) {\n            this.logger.info(\"headers not received yet, returning empty string\");\n            return \"\";\n          }\n          const headersList = Array.from(response.headers.entries());\n          const allHeaders = headersList.map(([headerName, headerValue]) => {\n            return `${headerName}: ${headerValue}`;\n          }).join(\"\\r\\n\");\n          this.logger.info(\"resolved all response headers to\", allHeaders);\n          return allHeaders;\n        }\n      }\n    );\n    Object.defineProperties(this.request, {\n      response: {\n        enumerable: true,\n        configurable: false,\n        get: () => this.response\n      },\n      responseText: {\n        enumerable: true,\n        configurable: false,\n        get: () => this.responseText\n      },\n      responseXML: {\n        enumerable: true,\n        configurable: false,\n        get: () => this.responseXML\n      }\n    });\n    const totalResponseBodyLength = await getBodyByteLength(response.clone());\n    this.logger.info(\"calculated response body length\", totalResponseBodyLength);\n    this.trigger(\"loadstart\", this.request, {\n      loaded: 0,\n      total: totalResponseBodyLength\n    });\n    this.setReadyState(this.request.HEADERS_RECEIVED);\n    this.setReadyState(this.request.LOADING);\n    const finalizeResponse = () => {\n      this.logger.info(\"finalizing the mocked response...\");\n      this.setReadyState(this.request.DONE);\n      this.trigger(\"load\", this.request, {\n        loaded: this.responseBuffer.byteLength,\n        total: totalResponseBodyLength\n      });\n      this.trigger(\"loadend\", this.request, {\n        loaded: this.responseBuffer.byteLength,\n        total: totalResponseBodyLength\n      });\n    };\n    if (response.body) {\n      this.logger.info(\"mocked response has body, streaming...\");\n      const reader = response.body.getReader();\n      const readNextResponseBodyChunk = async () => {\n        const { value, done } = await reader.read();\n        if (done) {\n          this.logger.info(\"response body stream done!\");\n          finalizeResponse();\n          return;\n        }\n        if (value) {\n          this.logger.info(\"read response body chunk:\", value);\n          this.responseBuffer = concatArrayBuffer(this.responseBuffer, value);\n          this.trigger(\"progress\", this.request, {\n            loaded: this.responseBuffer.byteLength,\n            total: totalResponseBodyLength\n          });\n        }\n        readNextResponseBodyChunk();\n      };\n      readNextResponseBodyChunk();\n    } else {\n      finalizeResponse();\n    }\n  }\n  responseBufferToText() {\n    return decodeBuffer(this.responseBuffer);\n  }\n  get response() {\n    this.logger.info(\n      \"getResponse (responseType: %s)\",\n      this.request.responseType\n    );\n    if (this.request.readyState !== this.request.DONE) {\n      return null;\n    }\n    switch (this.request.responseType) {\n      case \"json\": {\n        const responseJson = parseJson(this.responseBufferToText());\n        this.logger.info(\"resolved response JSON\", responseJson);\n        return responseJson;\n      }\n      case \"arraybuffer\": {\n        const arrayBuffer = toArrayBuffer(this.responseBuffer);\n        this.logger.info(\"resolved response ArrayBuffer\", arrayBuffer);\n        return arrayBuffer;\n      }\n      case \"blob\": {\n        const mimeType = this.request.getResponseHeader(\"Content-Type\") || \"text/plain\";\n        const responseBlob = new Blob([this.responseBufferToText()], {\n          type: mimeType\n        });\n        this.logger.info(\n          \"resolved response Blob (mime type: %s)\",\n          responseBlob,\n          mimeType\n        );\n        return responseBlob;\n      }\n      default: {\n        const responseText = this.responseBufferToText();\n        this.logger.info(\n          'resolving \"%s\" response type as text',\n          this.request.responseType,\n          responseText\n        );\n        return responseText;\n      }\n    }\n  }\n  get responseText() {\n    invariant(\n      this.request.responseType === \"\" || this.request.responseType === \"text\",\n      \"InvalidStateError: The object is in invalid state.\"\n    );\n    if (this.request.readyState !== this.request.LOADING && this.request.readyState !== this.request.DONE) {\n      return \"\";\n    }\n    const responseText = this.responseBufferToText();\n    this.logger.info('getResponseText: \"%s\"', responseText);\n    return responseText;\n  }\n  get responseXML() {\n    invariant(\n      this.request.responseType === \"\" || this.request.responseType === \"document\",\n      \"InvalidStateError: The object is in invalid state.\"\n    );\n    if (this.request.readyState !== this.request.DONE) {\n      return null;\n    }\n    const contentType = this.request.getResponseHeader(\"Content-Type\") || \"\";\n    if (typeof DOMParser === \"undefined\") {\n      console.warn(\n        \"Cannot retrieve XMLHttpRequest response body as XML: DOMParser is not defined. You are likely using an environment that is not browser or does not polyfill browser globals correctly.\"\n      );\n      return null;\n    }\n    if (isDomParserSupportedType(contentType)) {\n      return new DOMParser().parseFromString(\n        this.responseBufferToText(),\n        contentType\n      );\n    }\n    return null;\n  }\n  errorWith(error2) {\n    this[kIsRequestHandled] = true;\n    this.logger.info(\"responding with an error\");\n    this.setReadyState(this.request.DONE);\n    this.trigger(\"error\", this.request);\n    this.trigger(\"loadend\", this.request);\n  }\n  /**\n   * Transitions this request's `readyState` to the given one.\n   */\n  setReadyState(nextReadyState) {\n    this.logger.info(\n      \"setReadyState: %d -> %d\",\n      this.request.readyState,\n      nextReadyState\n    );\n    if (this.request.readyState === nextReadyState) {\n      this.logger.info(\"ready state identical, skipping transition...\");\n      return;\n    }\n    define(this.request, \"readyState\", nextReadyState);\n    this.logger.info(\"set readyState to: %d\", nextReadyState);\n    if (nextReadyState !== this.request.UNSENT) {\n      this.logger.info('triggerring \"readystatechange\" event...');\n      this.trigger(\"readystatechange\", this.request);\n    }\n  }\n  /**\n   * Triggers given event on the `XMLHttpRequest` instance.\n   */\n  trigger(eventName, target, options) {\n    const callback = target[`on${eventName}`];\n    const event = createEvent(target, eventName, options);\n    this.logger.info('trigger \"%s\"', eventName, options || \"\");\n    if (typeof callback === \"function\") {\n      this.logger.info('found a direct \"%s\" callback, calling...', eventName);\n      callback.call(target, event);\n    }\n    const events = target instanceof XMLHttpRequestUpload ? this.uploadEvents : this.events;\n    for (const [registeredEventName, listeners] of events) {\n      if (registeredEventName === eventName) {\n        this.logger.info(\n          'found %d listener(s) for \"%s\" event, calling...',\n          listeners.length,\n          eventName\n        );\n        listeners.forEach((listener) => listener.call(target, event));\n      }\n    }\n  }\n  /**\n   * Converts this `XMLHttpRequest` instance into a Fetch API `Request` instance.\n   */\n  toFetchApiRequest(body) {\n    this.logger.info(\"converting request to a Fetch API Request...\");\n    const resolvedBody = body instanceof Document ? body.documentElement.innerText : body;\n    const fetchRequest = new Request(this.url.href, {\n      method: this.method,\n      headers: this.requestHeaders,\n      /**\n       * @see https://xhr.spec.whatwg.org/#cross-origin-credentials\n       */\n      credentials: this.request.withCredentials ? \"include\" : \"same-origin\",\n      body: [\"GET\", \"HEAD\"].includes(this.method.toUpperCase()) ? null : resolvedBody\n    });\n    const proxyHeaders = createProxy(fetchRequest.headers, {\n      methodCall: ([methodName, args], invoke) => {\n        switch (methodName) {\n          case \"append\":\n          case \"set\": {\n            const [headerName, headerValue] = args;\n            this.request.setRequestHeader(headerName, headerValue);\n            break;\n          }\n          case \"delete\": {\n            const [headerName] = args;\n            console.warn(\n              `XMLHttpRequest: Cannot remove a \"${headerName}\" header from the Fetch API representation of the \"${fetchRequest.method} ${fetchRequest.url}\" request. XMLHttpRequest headers cannot be removed.`\n            );\n            break;\n          }\n        }\n        return invoke();\n      }\n    });\n    define(fetchRequest, \"headers\", proxyHeaders);\n    setRawRequest(fetchRequest, this.request);\n    this.logger.info(\"converted request to a Fetch API Request!\", fetchRequest);\n    return fetchRequest;\n  }\n};\nfunction toAbsoluteUrl(url) {\n  if (typeof location === \"undefined\") {\n    return new URL(url);\n  }\n  return new URL(url.toString(), location.href);\n}\nfunction define(target, property, value) {\n  Reflect.defineProperty(target, property, {\n    // Ensure writable properties to allow redefining readonly properties.\n    writable: true,\n    enumerable: true,\n    value\n  });\n}\nfunction createXMLHttpRequestProxy({\n  emitter,\n  logger\n}) {\n  const XMLHttpRequestProxy = new Proxy(globalThis.XMLHttpRequest, {\n    construct(target, args, newTarget) {\n      logger.info(\"constructed new XMLHttpRequest\");\n      const originalRequest = Reflect.construct(\n        target,\n        args,\n        newTarget\n      );\n      const prototypeDescriptors = Object.getOwnPropertyDescriptors(\n        target.prototype\n      );\n      for (const propertyName in prototypeDescriptors) {\n        Reflect.defineProperty(\n          originalRequest,\n          propertyName,\n          prototypeDescriptors[propertyName]\n        );\n      }\n      const xhrRequestController = new XMLHttpRequestController(\n        originalRequest,\n        logger\n      );\n      xhrRequestController.onRequest = async function({ request, requestId }) {\n        const controller = new RequestController(request);\n        this.logger.info(\"awaiting mocked response...\");\n        this.logger.info(\n          'emitting the \"request\" event for %s listener(s)...',\n          emitter.listenerCount(\"request\")\n        );\n        const isRequestHandled = await handleRequest2({\n          request,\n          requestId,\n          controller,\n          emitter,\n          onResponse: async (response) => {\n            await this.respondWith(response);\n          },\n          onRequestError: () => {\n            this.errorWith(new TypeError(\"Network error\"));\n          },\n          onError: (error2) => {\n            this.logger.info(\"request errored!\", { error: error2 });\n            if (error2 instanceof Error) {\n              this.errorWith(error2);\n            }\n          }\n        });\n        if (!isRequestHandled) {\n          this.logger.info(\n            \"no mocked response received, performing request as-is...\"\n          );\n        }\n      };\n      xhrRequestController.onResponse = async function({\n        response,\n        isMockedResponse,\n        request,\n        requestId\n      }) {\n        this.logger.info(\n          'emitting the \"response\" event for %s listener(s)...',\n          emitter.listenerCount(\"response\")\n        );\n        emitter.emit(\"response\", {\n          response,\n          isMockedResponse,\n          request,\n          requestId\n        });\n      };\n      return xhrRequestController.request;\n    }\n  });\n  return XMLHttpRequestProxy;\n}\nvar _XMLHttpRequestInterceptor = class extends Interceptor {\n  constructor() {\n    super(_XMLHttpRequestInterceptor.interceptorSymbol);\n  }\n  checkEnvironment() {\n    return hasConfigurableGlobal(\"XMLHttpRequest\");\n  }\n  setup() {\n    const logger = this.logger.extend(\"setup\");\n    logger.info('patching \"XMLHttpRequest\" module...');\n    const PureXMLHttpRequest = globalThis.XMLHttpRequest;\n    invariant(\n      !PureXMLHttpRequest[IS_PATCHED_MODULE],\n      'Failed to patch the \"XMLHttpRequest\" module: already patched.'\n    );\n    globalThis.XMLHttpRequest = createXMLHttpRequestProxy({\n      emitter: this.emitter,\n      logger: this.logger\n    });\n    logger.info(\n      'native \"XMLHttpRequest\" module patched!',\n      globalThis.XMLHttpRequest.name\n    );\n    Object.defineProperty(globalThis.XMLHttpRequest, IS_PATCHED_MODULE, {\n      enumerable: true,\n      configurable: true,\n      value: true\n    });\n    this.subscriptions.push(() => {\n      Object.defineProperty(globalThis.XMLHttpRequest, IS_PATCHED_MODULE, {\n        value: void 0\n      });\n      globalThis.XMLHttpRequest = PureXMLHttpRequest;\n      logger.info(\n        'native \"XMLHttpRequest\" module restored!',\n        globalThis.XMLHttpRequest.name\n      );\n    });\n  }\n};\nvar XMLHttpRequestInterceptor = _XMLHttpRequestInterceptor;\nXMLHttpRequestInterceptor.interceptorSymbol = Symbol(\"xhr\");\n\n// src/browser/setupWorker/start/createFallbackRequestListener.ts\nimport { handleRequest as handleRequest3 } from '../core/utils/handleRequest.mjs';\nimport { isHandlerKind as isHandlerKind2 } from '../core/utils/internal/isHandlerKind.mjs';\nfunction createFallbackRequestListener(context, options) {\n  const interceptor = new BatchInterceptor({\n    name: \"fallback\",\n    interceptors: [new FetchInterceptor(), new XMLHttpRequestInterceptor()]\n  });\n  interceptor.on(\"request\", async ({ request, requestId, controller }) => {\n    const requestCloneForLogs = request.clone();\n    const response = await handleRequest3(\n      request,\n      requestId,\n      context.getRequestHandlers().filter(isHandlerKind2(\"RequestHandler\")),\n      options,\n      context.emitter,\n      {\n        onMockedResponse(_, { handler, parsedResult }) {\n          if (!options.quiet) {\n            context.emitter.once(\"response:mocked\", ({ response: response2 }) => {\n              handler.log({\n                request: requestCloneForLogs,\n                response: response2,\n                parsedResult\n              });\n            });\n          }\n        }\n      }\n    );\n    if (response) {\n      controller.respondWith(response);\n    }\n  });\n  interceptor.on(\n    \"response\",\n    ({ response, isMockedResponse, request, requestId }) => {\n      context.emitter.emit(\n        isMockedResponse ? \"response:mocked\" : \"response:bypass\",\n        {\n          response,\n          request,\n          requestId\n        }\n      );\n    }\n  );\n  interceptor.apply();\n  return interceptor;\n}\n\n// src/browser/setupWorker/start/createFallbackStart.ts\nfunction createFallbackStart(context) {\n  return async function start(options) {\n    context.fallbackInterceptor = createFallbackRequestListener(\n      context,\n      options\n    );\n    printStartMessage({\n      message: \"Mocking enabled (fallback mode).\",\n      quiet: options.quiet\n    });\n    return void 0;\n  };\n}\n\n// src/browser/setupWorker/stop/createFallbackStop.ts\nfunction createFallbackStop(context) {\n  return function stop() {\n    context.fallbackInterceptor?.dispose();\n    printStopMessage({ quiet: context.startOptions?.quiet });\n  };\n}\n\n// src/browser/setupWorker/setupWorker.ts\nimport { devUtils as devUtils10 } from '../core/utils/internal/devUtils.mjs';\nimport { SetupApi } from '../core/SetupApi.mjs';\nimport { mergeRight as mergeRight2 } from '../core/utils/internal/mergeRight.mjs';\n\n// src/browser/utils/supportsReadableStreamTransfer.ts\nfunction supportsReadableStreamTransfer() {\n  try {\n    const stream = new ReadableStream({\n      start: (controller) => controller.close()\n    });\n    const message = new MessageChannel();\n    message.port1.postMessage(stream, [stream]);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n// src/browser/setupWorker/setupWorker.ts\nimport { webSocketInterceptor } from '../core/ws/webSocketInterceptor.mjs';\nimport { handleWebSocketEvent } from '../core/ws/handleWebSocketEvent.mjs';\nimport { attachWebSocketLogger } from '../core/ws/utils/attachWebSocketLogger.mjs';\nvar SetupWorkerApi = class extends SetupApi {\n  context;\n  startHandler = null;\n  stopHandler = null;\n  listeners;\n  constructor(...handlers) {\n    super(...handlers);\n    invariant(\n      !isNodeProcess(),\n      devUtils10.formatMessage(\n        \"Failed to execute `setupWorker` in a non-browser environment. Consider using `setupServer` for Node.js environment instead.\"\n      )\n    );\n    this.listeners = [];\n    this.context = this.createWorkerContext();\n  }\n  createWorkerContext() {\n    const context = {\n      // Mocking is not considered enabled until the worker\n      // signals back the successful activation event.\n      isMockingEnabled: false,\n      startOptions: null,\n      worker: null,\n      getRequestHandlers: () => {\n        return this.handlersController.currentHandlers();\n      },\n      registration: null,\n      emitter: this.emitter,\n      workerChannel: {\n        on: (eventType, callback) => {\n          this.context.events.addListener(navigator.serviceWorker, \"message\", (event) => {\n            if (event.source !== this.context.worker) {\n              return;\n            }\n            const message = event.data;\n            if (!message) {\n              return;\n            }\n            if (message.type === eventType) {\n              callback(event, message);\n            }\n          });\n        },\n        send: (type) => {\n          this.context.worker?.postMessage(type);\n        }\n      },\n      events: {\n        addListener: (target, eventType, callback) => {\n          target.addEventListener(eventType, callback);\n          this.listeners.push({\n            eventType,\n            target,\n            callback\n          });\n          return () => {\n            target.removeEventListener(eventType, callback);\n          };\n        },\n        removeAllListeners: () => {\n          for (const { target, eventType, callback } of this.listeners) {\n            target.removeEventListener(eventType, callback);\n          }\n          this.listeners = [];\n        },\n        once: (eventType) => {\n          const bindings = [];\n          return new Promise((resolve, reject) => {\n            const handleIncomingMessage = (event) => {\n              try {\n                const message = event.data;\n                if (message.type === eventType) {\n                  resolve(message);\n                }\n              } catch (error2) {\n                reject(error2);\n              }\n            };\n            bindings.push(\n              this.context.events.addListener(\n                navigator.serviceWorker,\n                \"message\",\n                handleIncomingMessage\n              ),\n              this.context.events.addListener(\n                navigator.serviceWorker,\n                \"messageerror\",\n                reject\n              )\n            );\n          }).finally(() => {\n            bindings.forEach((unbind) => unbind());\n          });\n        }\n      },\n      supports: {\n        serviceWorkerApi: !(\"serviceWorker\" in navigator) || location.protocol === \"file:\",\n        readableStreamTransfer: supportsReadableStreamTransfer()\n      }\n    };\n    this.startHandler = context.supports.serviceWorkerApi ? createFallbackStart(context) : createStartHandler(context);\n    this.stopHandler = context.supports.serviceWorkerApi ? createFallbackStop(context) : createStop(context);\n    return context;\n  }\n  async start(options = {}) {\n    if (options.waitUntilReady === true) {\n      devUtils10.warn(\n        'The \"waitUntilReady\" option has been deprecated. Please remove it from this \"worker.start()\" call. Follow the recommended Browser integration (https://mswjs.io/docs/integrations/browser) to eliminate any race conditions between the Service Worker registration and any requests made by your application on initial render.'\n      );\n    }\n    this.context.startOptions = mergeRight2(\n      DEFAULT_START_OPTIONS,\n      options\n    );\n    handleWebSocketEvent({\n      getUnhandledRequestStrategy: () => {\n        return this.context.startOptions.onUnhandledRequest;\n      },\n      getHandlers: () => {\n        return this.handlersController.currentHandlers();\n      },\n      onMockedConnection: (connection) => {\n        if (!this.context.startOptions.quiet) {\n          attachWebSocketLogger(connection);\n        }\n      },\n      onPassthroughConnection() {\n      }\n    });\n    webSocketInterceptor.apply();\n    this.subscriptions.push(() => {\n      webSocketInterceptor.dispose();\n    });\n    return await this.startHandler(this.context.startOptions, options);\n  }\n  stop() {\n    super.dispose();\n    this.context.events.removeAllListeners();\n    this.context.emitter.removeAllListeners();\n    this.stopHandler();\n  }\n};\nfunction setupWorker(...handlers) {\n  return new SetupWorkerApi(...handlers);\n}\nexport {\n  SetupWorkerApi,\n  setupWorker\n};\n//# sourceMappingURL=index.mjs.map"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12],"mappings":"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"}